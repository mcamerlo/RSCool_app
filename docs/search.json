[
  {
    "objectID": "j3.1_linguagem.html",
    "href": "j3.1_linguagem.html",
    "title": "LINGUAGEM",
    "section": "",
    "text": "O assignment operator (&lt;-) é a ferramenta chave para a criação de objetos R.\nExemplos de criação de variáveis:\n\nvar_numeric &lt;- c(2.5  ,3.5 ,6.5  , -3.5, 0 , 7.7) \n\nvar_integer &lt;- c(2    ,3    ,6   , -3,   2,   9)\n\nvar_factor &lt;- factor (c(\"alto\",\"baixo\",\"baixo\", \"alto\", \"alto\", \"baixo\"))\n\nvar_character &lt;- c(\"João\",\"Rute\",\"Pedro\", \"Filipa\", \"Ana\", \"Fatima\")\n\nvar_log &lt;- c(TRUE,TRUE,TRUE,FALSE,FALSE,TRUE)\n\nvar_integerNA &lt;- c(2    ,3    ,NA   , -3, NA, NA)\n\n\nExemplos de criação de uma dataframe:\n\nDF &lt;- data.frame (var_character,var_numeric,var_integer,var_factor,var_log,var_integerNA)\n\n\n\n\n\n\n\n\nVectores numeric\n\nvar_numeric\n\n[1]  2.5  3.5  6.5 -3.5  0.0  7.7\n\n\n\nVectores integer\n\nvar_integer\n\n[1]  2  3  6 -3  2  9\n\n\n\nVectores factor\n\nvar_factor\n\n[1] alto  baixo baixo alto  alto  baixo\nLevels: alto baixo\n\n\n\nVectores character\n\nvar_character\n\n[1] \"João\"   \"Rute\"   \"Pedro\"  \"Filipa\" \"Ana\"    \"Fatima\"\n\n\n\nVectores lógico\n\nvar_log\n\n[1]  TRUE  TRUE  TRUE FALSE FALSE  TRUE\n\n\n\n\n\n\n\nDF\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\n\n\n\n\n\n\ntable (var_factor)\n\nvar_factor\n alto baixo \n    3     3 \n\n\n\n\n\n\n\nplot (var_numeric)\n\n\n\n\n \n\n\n\n\n\n\n\nOperador\nDescrição\n\n\n\n\n+\naddition\n\n\n-\nsubtraction\n\n\n*\nmultiplication\n\n\n/\ndivision\n\n\n^ or **\nexponentiation\n\n\nx %/% y\ninteger division 5%/%2 is 2\n\n\n\n\n\n\n\n\n\n\n\nOperador\nDescrição\n\n\n\n\n&lt;\nless than\n\n\n&lt;=\nless than or equal to\n\n\n&gt;\ngreater than\n\n\n&gt;=\ngreater than or equal to\n\n\n==\nexactly equal to\n\n\n!=\nnot equal to\n\n\n!x\nNot x\n\n\nx\ny\n\n\nx & y\nx E y\n\n\nis.na(x)\ntestar se x tem NAs\n\n\n%in%\n“a %in% c(a, b, c)”: Is a in the group c(a, b, c)?\n\n\n\n” %in% is the only operator that does not do normal element-wise execution. %in% tests whether the value(s) on the left side are in the vector on the right side.” (Ver Grolemund 2014: 81)   \n\n\n\n\n\nc(): combinar ou concatenar\n\n\nc  (25  , 33  ,  30  , 42  ,  26  ,  28) \n\n[1] 25 33 30 42 26 28\n\n\n\n\nseq(): sequênciar\n\n\nseq (1,6)\n\n[1] 1 2 3 4 5 6\n\n\n\n\nrep(): replicar \n\n\nrep (2017, 6)    # replicar 2017 6 vezes     \n\n[1] 2017 2017 2017 2017 2017 2017\n\n\n\n\nOutras funções comuns\n\n\n\n\n\n\n\n\nFunção\nDescrição\n\n\n\n\nseq(from , to, by)\ngenerate a sequence\n\n\nrep(x, ntimes)\nrepeat x n times\n\n\ncut(x, n)\ndivide continuous variable in factor with n levels\n\n\nsort (x)\nordenar\n\n\nlength (x)\nextensão\n\n\n\ncbind(objeto1, objeto2, …) # combina objetos como colunas\nrbind(objeto1, objeto2, …) # combina objetos como linhas\n\n\n\n\n\n\nlength(DF$var_numeric)\n\n[1] 6\n\nsum(DF$var_numeric)\n\n[1] 16.7\n\nmean (DF$var_numeric)\n\n[1] 2.783333\n\nmedian(DF$var_numeric)\n\n[1] 3\n\nsort  (DF$var_numeric)  \n\n[1] -3.5  0.0  2.5  3.5  6.5  7.7\n\ntable (DF$var_factor)\n\n\n alto baixo \n    3     3 \n\n\n\nclass (DF$var_numeric)\n\n[1] \"numeric\"\n\nclass (DF$var_integer)\n\n[1] \"numeric\"\n\nclass ( DF$var_factor)\n\n[1] \"factor\"\n\nclass ( DF$var_character)\n\n[1] \"character\"\n\n\n\n\n\n\n\n\nis.na(DF$var_integerNA)\n\n[1] FALSE FALSE  TRUE FALSE  TRUE  TRUE\n\n!is.na(DF$var_integerNA)\n\n[1]  TRUE  TRUE FALSE  TRUE FALSE FALSE\n\n\n\ntable (is.na(DF$var_integerNA) )\n\n\nFALSE  TRUE \n    3     3 \n\ntable (DF$var_integerNA, exclude = FALSE)\n\n\n  -3    2    3 &lt;NA&gt; \n   1    1    1    3 \n\n\n\n\n\n\n\n\nDF$var_num\n\n[1]  2.5  3.5  6.5 -3.5  0.0  7.7\n\nDF$var_num [1]   \n\n[1] 2.5\n\nDF$var_num [4]  \n\n[1] -3.5\n\nDF$var_num [1:3]\n\n[1] 2.5 3.5 6.5\n\nDF$var_num [2:5]\n\n[1]  3.5  6.5 -3.5  0.0\n\nDF$var_num [4:1]\n\n[1] -3.5  6.5  3.5  2.5\n\nDF$var_num [-1]      # indice negativo\n\n[1]  3.5  6.5 -3.5  0.0  7.7\n\nDF$var_num [20]  # fora do rango\n\n[1] NA\n\n\n\n\n\n\n\n\nclass (DF)     # classe de objeto      \n\n[1] \"data.frame\"\n\nnrow (DF)    # numero de linhas  \n\n[1] 6\n\nncol (DF)    # numero de colunas  \n\n[1] 6\n\ndim(DF)      # dimensão (linhas & colunas)   \n\n[1] 6 6\n\nobject.size(DF) # tamanho em bytes\n\n2472 bytes\n\nnames (DF)  # nome das variáveis \n\n[1] \"var_character\" \"var_numeric\"   \"var_integer\"   \"var_factor\"   \n[5] \"var_log\"       \"var_integerNA\"\n\nhead (DF)    # Primeiras 6 observações da base\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\nhead (DF, 13)  # Primeiras 13 observações da base\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\ntail (DF)      # últimas 6 observações da base\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\ntail (DF, 10)    # últimas 10 observações da base\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\nsummary(DF)     # sommario de cada variável da base\n\n var_character       var_numeric      var_integer     var_factor\n Length:6           Min.   :-3.500   Min.   :-3.000   alto :3   \n Class :character   1st Qu.: 0.625   1st Qu.: 2.000   baixo:3   \n Mode  :character   Median : 3.000   Median : 2.500             \n                    Mean   : 2.783   Mean   : 3.167             \n                    3rd Qu.: 5.750   3rd Qu.: 5.250             \n                    Max.   : 7.700   Max.   : 9.000             \n                                                                \n  var_log        var_integerNA    \n Mode :logical   Min.   :-3.0000  \n FALSE:2         1st Qu.:-0.5000  \n TRUE :4         Median : 2.0000  \n                 Mean   : 0.6667  \n                 3rd Qu.: 2.5000  \n                 Max.   : 3.0000  \n                 NA's   :3        \n\nstr (DF)       # estrutura da base\n\n'data.frame':   6 obs. of  6 variables:\n $ var_character: chr  \"João\" \"Rute\" \"Pedro\" \"Filipa\" ...\n $ var_numeric  : num  2.5 3.5 6.5 -3.5 0 7.7\n $ var_integer  : num  2 3 6 -3 2 9\n $ var_factor   : Factor w/ 2 levels \"alto\",\"baixo\": 1 2 2 1 1 2\n $ var_log      : logi  TRUE TRUE TRUE FALSE FALSE TRUE\n $ var_integerNA: num  2 3 NA -3 NA NA\n\n\n\n\n\n\n\n\nDF\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\nDF [1  ,6 ]         #  linha 1      , coluna 6\n\n[1] 2\n\nDF [1  , ]      # linha 1       , colunas todas\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n\nDF [ ,6 ]        # linhas todas, coluna 6\n\n[1]  2  3 NA -3 NA NA\n\nDF [1:5, ]  # linhas 1 a 5  , colunas todas\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n\nDF [ , 3:6]     # linhas todas  , colunas 3 a 6 \n\n  var_integer var_factor var_log var_integerNA\n1           2       alto    TRUE             2\n2           3      baixo    TRUE             3\n3           6      baixo    TRUE            NA\n4          -3       alto   FALSE            -3\n5           2       alto   FALSE            NA\n6           9      baixo    TRUE            NA\n\nDF [1:3,4:6]\n\n  var_factor var_log var_integerNA\n1       alto    TRUE             2\n2      baixo    TRUE             3\n3      baixo    TRUE            NA\n\nDF [c(1,2,3), c(4,5,6)]\n\n  var_factor var_log var_integerNA\n1       alto    TRUE             2\n2      baixo    TRUE             3\n3      baixo    TRUE            NA\n\nDF [  ,-c(1,2)]  # linhas todas, colunas todas menos 1 e 2\n\n  var_integer var_factor var_log var_integerNA\n1           2       alto    TRUE             2\n2           3      baixo    TRUE             3\n3           6      baixo    TRUE            NA\n4          -3       alto   FALSE            -3\n5           2       alto   FALSE            NA\n6           9      baixo    TRUE            NA\n\n\n\n\n\n\n\n\nplot (data1$gas19)\n\n\nhist (data1$gas19)\n\nboxplot (data1$gas19)\n\nbarplot(table (data1$exp19))"
  },
  {
    "objectID": "j3.1_linguagem.html#o-assignment-operator",
    "href": "j3.1_linguagem.html#o-assignment-operator",
    "title": "LINGUAGEM",
    "section": "",
    "text": "O assignment operator (&lt;-) é a ferramenta chave para a criação de objetos R.\nExemplos de criação de variáveis:\n\nvar_numeric &lt;- c(2.5  ,3.5 ,6.5  , -3.5, 0 , 7.7) \n\nvar_integer &lt;- c(2    ,3    ,6   , -3,   2,   9)\n\nvar_factor &lt;- factor (c(\"alto\",\"baixo\",\"baixo\", \"alto\", \"alto\", \"baixo\"))\n\nvar_character &lt;- c(\"João\",\"Rute\",\"Pedro\", \"Filipa\", \"Ana\", \"Fatima\")\n\nvar_log &lt;- c(TRUE,TRUE,TRUE,FALSE,FALSE,TRUE)\n\nvar_integerNA &lt;- c(2    ,3    ,NA   , -3, NA, NA)\n\n\nExemplos de criação de uma dataframe:\n\nDF &lt;- data.frame (var_character,var_numeric,var_integer,var_factor,var_log,var_integerNA)"
  },
  {
    "objectID": "j3.1_linguagem.html#objectos-mais-frequentes",
    "href": "j3.1_linguagem.html#objectos-mais-frequentes",
    "title": "LINGUAGEM",
    "section": "",
    "text": "Vectores numeric\n\nvar_numeric\n\n[1]  2.5  3.5  6.5 -3.5  0.0  7.7\n\n\n\nVectores integer\n\nvar_integer\n\n[1]  2  3  6 -3  2  9\n\n\n\nVectores factor\n\nvar_factor\n\n[1] alto  baixo baixo alto  alto  baixo\nLevels: alto baixo\n\n\n\nVectores character\n\nvar_character\n\n[1] \"João\"   \"Rute\"   \"Pedro\"  \"Filipa\" \"Ana\"    \"Fatima\"\n\n\n\nVectores lógico\n\nvar_log\n\n[1]  TRUE  TRUE  TRUE FALSE FALSE  TRUE\n\n\n\n\n\n\n\nDF\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\n\n\n\n\n\n\ntable (var_factor)\n\nvar_factor\n alto baixo \n    3     3 \n\n\n\n\n\n\n\nplot (var_numeric)"
  },
  {
    "objectID": "j3.1_linguagem.html#operadores-aritméticos",
    "href": "j3.1_linguagem.html#operadores-aritméticos",
    "title": "LINGUAGEM",
    "section": "",
    "text": "Operador\nDescrição\n\n\n\n\n+\naddition\n\n\n-\nsubtraction\n\n\n*\nmultiplication\n\n\n/\ndivision\n\n\n^ or **\nexponentiation\n\n\nx %/% y\ninteger division 5%/%2 is 2"
  },
  {
    "objectID": "j3.1_linguagem.html#operadores-lógicos",
    "href": "j3.1_linguagem.html#operadores-lógicos",
    "title": "LINGUAGEM",
    "section": "",
    "text": "Operador\nDescrição\n\n\n\n\n&lt;\nless than\n\n\n&lt;=\nless than or equal to\n\n\n&gt;\ngreater than\n\n\n&gt;=\ngreater than or equal to\n\n\n==\nexactly equal to\n\n\n!=\nnot equal to\n\n\n!x\nNot x\n\n\nx\ny\n\n\nx & y\nx E y\n\n\nis.na(x)\ntestar se x tem NAs\n\n\n%in%\n“a %in% c(a, b, c)”: Is a in the group c(a, b, c)?\n\n\n\n” %in% is the only operator that does not do normal element-wise execution. %in% tests whether the value(s) on the left side are in the vector on the right side.” (Ver Grolemund 2014: 81)"
  },
  {
    "objectID": "j3.1_linguagem.html#funções-básicas",
    "href": "j3.1_linguagem.html#funções-básicas",
    "title": "LINGUAGEM",
    "section": "",
    "text": "c(): combinar ou concatenar\n\n\nc  (25  , 33  ,  30  , 42  ,  26  ,  28) \n\n[1] 25 33 30 42 26 28\n\n\n\n\nseq(): sequênciar\n\n\nseq (1,6)\n\n[1] 1 2 3 4 5 6\n\n\n\n\nrep(): replicar \n\n\nrep (2017, 6)    # replicar 2017 6 vezes     \n\n[1] 2017 2017 2017 2017 2017 2017\n\n\n\n\nOutras funções comuns\n\n\n\n\n\n\n\n\nFunção\nDescrição\n\n\n\n\nseq(from , to, by)\ngenerate a sequence\n\n\nrep(x, ntimes)\nrepeat x n times\n\n\ncut(x, n)\ndivide continuous variable in factor with n levels\n\n\nsort (x)\nordenar\n\n\nlength (x)\nextensão\n\n\n\ncbind(objeto1, objeto2, …) # combina objetos como colunas\nrbind(objeto1, objeto2, …) # combina objetos como linhas"
  },
  {
    "objectID": "j3.1_linguagem.html#funções-variáveis",
    "href": "j3.1_linguagem.html#funções-variáveis",
    "title": "LINGUAGEM",
    "section": "",
    "text": "length(DF$var_numeric)\n\n[1] 6\n\nsum(DF$var_numeric)\n\n[1] 16.7\n\nmean (DF$var_numeric)\n\n[1] 2.783333\n\nmedian(DF$var_numeric)\n\n[1] 3\n\nsort  (DF$var_numeric)  \n\n[1] -3.5  0.0  2.5  3.5  6.5  7.7\n\ntable (DF$var_factor)\n\n\n alto baixo \n    3     3 \n\n\n\nclass (DF$var_numeric)\n\n[1] \"numeric\"\n\nclass (DF$var_integer)\n\n[1] \"numeric\"\n\nclass ( DF$var_factor)\n\n[1] \"factor\"\n\nclass ( DF$var_character)\n\n[1] \"character\""
  },
  {
    "objectID": "j3.1_linguagem.html#nas",
    "href": "j3.1_linguagem.html#nas",
    "title": "LINGUAGEM",
    "section": "",
    "text": "is.na(DF$var_integerNA)\n\n[1] FALSE FALSE  TRUE FALSE  TRUE  TRUE\n\n!is.na(DF$var_integerNA)\n\n[1]  TRUE  TRUE FALSE  TRUE FALSE FALSE\n\n\n\ntable (is.na(DF$var_integerNA) )\n\n\nFALSE  TRUE \n    3     3 \n\ntable (DF$var_integerNA, exclude = FALSE)\n\n\n  -3    2    3 &lt;NA&gt; \n   1    1    1    3"
  },
  {
    "objectID": "j3.1_linguagem.html#parêntesis-rectos-variáveis",
    "href": "j3.1_linguagem.html#parêntesis-rectos-variáveis",
    "title": "LINGUAGEM",
    "section": "",
    "text": "DF$var_num\n\n[1]  2.5  3.5  6.5 -3.5  0.0  7.7\n\nDF$var_num [1]   \n\n[1] 2.5\n\nDF$var_num [4]  \n\n[1] -3.5\n\nDF$var_num [1:3]\n\n[1] 2.5 3.5 6.5\n\nDF$var_num [2:5]\n\n[1]  3.5  6.5 -3.5  0.0\n\nDF$var_num [4:1]\n\n[1] -3.5  6.5  3.5  2.5\n\nDF$var_num [-1]      # indice negativo\n\n[1]  3.5  6.5 -3.5  0.0  7.7\n\nDF$var_num [20]  # fora do rango\n\n[1] NA"
  },
  {
    "objectID": "j3.1_linguagem.html#funções-bases",
    "href": "j3.1_linguagem.html#funções-bases",
    "title": "LINGUAGEM",
    "section": "",
    "text": "class (DF)     # classe de objeto      \n\n[1] \"data.frame\"\n\nnrow (DF)    # numero de linhas  \n\n[1] 6\n\nncol (DF)    # numero de colunas  \n\n[1] 6\n\ndim(DF)      # dimensão (linhas & colunas)   \n\n[1] 6 6\n\nobject.size(DF) # tamanho em bytes\n\n2472 bytes\n\nnames (DF)  # nome das variáveis \n\n[1] \"var_character\" \"var_numeric\"   \"var_integer\"   \"var_factor\"   \n[5] \"var_log\"       \"var_integerNA\"\n\nhead (DF)    # Primeiras 6 observações da base\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\nhead (DF, 13)  # Primeiras 13 observações da base\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\ntail (DF)      # últimas 6 observações da base\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\ntail (DF, 10)    # últimas 10 observações da base\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\nsummary(DF)     # sommario de cada variável da base\n\n var_character       var_numeric      var_integer     var_factor\n Length:6           Min.   :-3.500   Min.   :-3.000   alto :3   \n Class :character   1st Qu.: 0.625   1st Qu.: 2.000   baixo:3   \n Mode  :character   Median : 3.000   Median : 2.500             \n                    Mean   : 2.783   Mean   : 3.167             \n                    3rd Qu.: 5.750   3rd Qu.: 5.250             \n                    Max.   : 7.700   Max.   : 9.000             \n                                                                \n  var_log        var_integerNA    \n Mode :logical   Min.   :-3.0000  \n FALSE:2         1st Qu.:-0.5000  \n TRUE :4         Median : 2.0000  \n                 Mean   : 0.6667  \n                 3rd Qu.: 2.5000  \n                 Max.   : 3.0000  \n                 NA's   :3        \n\nstr (DF)       # estrutura da base\n\n'data.frame':   6 obs. of  6 variables:\n $ var_character: chr  \"João\" \"Rute\" \"Pedro\" \"Filipa\" ...\n $ var_numeric  : num  2.5 3.5 6.5 -3.5 0 7.7\n $ var_integer  : num  2 3 6 -3 2 9\n $ var_factor   : Factor w/ 2 levels \"alto\",\"baixo\": 1 2 2 1 1 2\n $ var_log      : logi  TRUE TRUE TRUE FALSE FALSE TRUE\n $ var_integerNA: num  2 3 NA -3 NA NA"
  },
  {
    "objectID": "j3.1_linguagem.html#parêntesis-bases",
    "href": "j3.1_linguagem.html#parêntesis-bases",
    "title": "LINGUAGEM",
    "section": "",
    "text": "DF\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n6        Fatima         7.7           9      baixo    TRUE            NA\n\nDF [1  ,6 ]         #  linha 1      , coluna 6\n\n[1] 2\n\nDF [1  , ]      # linha 1       , colunas todas\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n\nDF [ ,6 ]        # linhas todas, coluna 6\n\n[1]  2  3 NA -3 NA NA\n\nDF [1:5, ]  # linhas 1 a 5  , colunas todas\n\n  var_character var_numeric var_integer var_factor var_log var_integerNA\n1          João         2.5           2       alto    TRUE             2\n2          Rute         3.5           3      baixo    TRUE             3\n3         Pedro         6.5           6      baixo    TRUE            NA\n4        Filipa        -3.5          -3       alto   FALSE            -3\n5           Ana         0.0           2       alto   FALSE            NA\n\nDF [ , 3:6]     # linhas todas  , colunas 3 a 6 \n\n  var_integer var_factor var_log var_integerNA\n1           2       alto    TRUE             2\n2           3      baixo    TRUE             3\n3           6      baixo    TRUE            NA\n4          -3       alto   FALSE            -3\n5           2       alto   FALSE            NA\n6           9      baixo    TRUE            NA\n\nDF [1:3,4:6]\n\n  var_factor var_log var_integerNA\n1       alto    TRUE             2\n2      baixo    TRUE             3\n3      baixo    TRUE            NA\n\nDF [c(1,2,3), c(4,5,6)]\n\n  var_factor var_log var_integerNA\n1       alto    TRUE             2\n2      baixo    TRUE             3\n3      baixo    TRUE            NA\n\nDF [  ,-c(1,2)]  # linhas todas, colunas todas menos 1 e 2\n\n  var_integer var_factor var_log var_integerNA\n1           2       alto    TRUE             2\n2           3      baixo    TRUE             3\n3           6      baixo    TRUE            NA\n4          -3       alto   FALSE            -3\n5           2       alto   FALSE            NA\n6           9      baixo    TRUE            NA"
  },
  {
    "objectID": "j3.1_linguagem.html#gráficos",
    "href": "j3.1_linguagem.html#gráficos",
    "title": "LINGUAGEM",
    "section": "",
    "text": "plot (data1$gas19)\n\n\nhist (data1$gas19)\n\nboxplot (data1$gas19)\n\nbarplot(table (data1$exp19))"
  },
  {
    "objectID": "j3.5_estatística1_tools.html",
    "href": "j3.5_estatística1_tools.html",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "mean(x)                        \n\n\nmedian(x)\n\n\n# install.packages(\"lsr\")\nlibrary(\"lsr\")   \n\nmodeOf(x)\n\n\nsummary (x)\n\n\nmin (x)\n\n\nmax (x)\n\n\nrange(x)\n\n\n\nquantile (x, .50)         # quantil 2º\n\n\nquantile (x, .25)          # quartil 1º\n\n\nquantile (x, .75)         # quartil  3º\n\n\n\nvar(S$x)                  # Variância\n\n\nsd(S$x)                     # Desvío padrão (standard deviation)   \n\n\nsd(S$x) /  sqrt (length(S$x))      # Erro padrão (standard error)\n\n\n\n\n\n\nplot (x)    \n\n\nplot (x)\nablineabline (h= mean(x))           # Plot com média                  \n\nabline (h=median(x))                # mais mediana\n\nabline (h=modeOf(x),col=\"blue\")     # mais moda\n\n\n\n\n\n\npar (mfrow =c(1,3))      \n\nplot(x)\n\nplot(xB)\n\nplot(xC)\n\n\nplot(x, ylim=c(0,50))                \n\nplot(x, ylim= c(0,50), xlim=c(0,10)) \n\n\n\n\n\n\nhist(x)\n\nhist(x, right=F)                           # valor da direita no incluido\n\nhist(x, ylim= c(0,50), xlim=c(0,10))        \n\n\n\n\n\n\nstem(x)\n\n\n\n\n\n\ndotchart (x)\n\n\nstripchart(x, method = \"stack\", offset = .5  , at = .15    , pch = 19, cex=1)\n\n\n\n\n\n\n\n\n\n\nboxplot (x)\n\n\n\n\n\nboxplot (x, range=0)\n\n\n\n\n\n\npar (mfrow =c(2,1))  \nboxplot (x, range=0, horizontal=TRUE)\nhist(x)\n\n\n\n\n\n\n\npar (mfrow =c(2,3))  \nboxplot (x, range=0, horizontal=TRUE)\nboxplot (xB, range=0, horizontal=TRUE)\nboxplot (xC, range=0, horizontal=TRUE)\nhist(x)\nhist(xB)\nhist(xC)\n\n\n\n\n\n\nProporções\n\n\nt1 &lt;-table (x)\n\nt2 &lt;- cbind(Freq=t1, \n                Cumul=cumsum(t1), \n                Relative=prop.table(t1), \n                Cum.Rel.=cumsum(prop.table(t1) ) )\nt2\n\n\n\nPercentagens\n\n\nt2per &lt;- cbind(Freq=t1, \n               Cumul=cumsum(t1), \n               Relative=prop.table(t1)*100, \n               Cum.Rel.=cumsum(prop.table(t1)\n               *100))  ; \nt2per\n\n\n\n\n\n\n\n\n\nplot (x, \n      frame=FALSE,\n      col = \"blue\", \n       main = \"x 2021\")\n\n\n\n\n\n\nhttps://www.statmethods.net/graphs/density.html\n\nd &lt;- density(x) # densidade da distribuição    \n\nplot(d) \n\n\nplot(d) # plots the results\npolygon(d, col=\"yellow\", border=\"red\")\n\n\n\n\n\n\nx &lt;- cars$speed\nh&lt;-hist(x, breaks=10, col=\"grey\", xlab=\"x por persona\",\n   main=\"Histograma com  Normal Curve\")\n\nxfit&lt;-seq(min(x),max(x),length=40)\n\nyfit&lt;-dnorm(xfit,mean=mean(x),sd=sd(x))\n\nyfit &lt;- yfit*diff(h$mids[1:2])*length(x)\n\nlines(xfit, yfit, col=\"green\", lwd=2)\n\n\n\nLabels_to_Points_in_Scatterplot\n\nplot(dist ~speed, col=\"lightblue\", pch=19, cex=2,data=cars)\n\ntext(dist~speed, labels=dist,data=cars, cex=0.9, font=2, pos=4)\n\n  \n\n\n\n\n\n\n\n\nt1 &lt;- table (var_cat)    \n\nt1     \n\nprop.table(t1 )\n\nprop.table(t1 )*100\n\nround (prop.table(t1 )*100, digits = 1)\n\naddmargins(t1)\n\n\nround (addmargins(prop.table(t1 )*100),1)\n\n\n\n\n\npie (t1 )        \n\npie (t1, labels = c(\"Não\", \"Sim\"))\n\n\n\n\nbarplot (t1 )        # frequências\n\n\nbarplot (prop.table(t1))    # proporções\n\n\nbarplot(t1 , horiz = TRUE)      # # posição horizontal        \n\n\nbarplot(t1, \n        main = \"Stress dos fumadores\",\n        xlab = \"Stress\", \n        ylab = \"Frequência\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nFrequências\n\nt2 &lt;- table (var_caty,var_catx)       \n\n\nround (addmargins (prop.table (t2,1) * 100), digits=2)\n\n\n\n\n\n\n\nbarplot (t2)\n\n\n\nbarplot(t2,\n         col=c(\"lightblue\", \"white\"),\n        legend = rownames(t2))\n\n\n\n\n\nplot(t2)\n\n\n \n\n\n\n\n\n\n\nlibrary(plyr)\n\nddply(Df,~var_catx,summarise,media=mean(var_numy))\n\n\nddply(Df,~var_catx,summarise,media=mean(Df$var_numy),median=median(Df$var_numy))\n\n\n\n\n\n\n\nboxplot(Df$var_numy~Df$var_catx)\n\n\n\n\n\n\n\n\n\n\n\nplot (D$var_numx, D$var_numy, pch=19)\n\n\n\n\n\n\ncor (D$var_numx, D$var_numy)\n\n\n\n\n\n\nlm (D$var_numy~D$var_numx)\n\n\n\n\n\n\nplot (D$var_numx, D$var_numy, pch=19)\nabline (a=mean(D$var_numy), b=0)\nabline(a=4.993, b=3.161, col=\"red\")   # abline(lm (D$var_numy~D$var_numx))\n\n\n\n\n\n\n\n\nplot(D$var_numx, D$var_numy, main = \"Main title\",\n     xlab = \"X axis title\", \n     ylab = \"Y axis title\",\n     pch = 19, \n     frame = FALSE)\n\n# Add regression line\nabline(lm(D$var_numy ~ D$var_numx, data = D), col = \"blue\")\n\n# Add loess fit\nlines(lowess(D$var_numx, D$var_numy), col = \"red\")\n\n\n\n\n\n\nmod &lt;- lm(var_numy ~ var_numx, data = D)\n# predicts + interval\nnewx &lt;- seq(min(D$var_numx), max(D$var_numx), length.out=100)\npreds &lt;- predict(mod, newdata = data.frame(var_numx=newx), \n                 interval = 'confidence')\n\n# plot\nplot(D$var_numy ~ D$var_numx, data = D)\n# add fill\npolygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), border = NA)\n# model\nabline(mod)\n# intervals\nlines(newx, preds[ ,3], lty = 'dashed', col = 'red')\nlines(newx, preds[ ,2], lty = 'dashed', col = 'red')"
  },
  {
    "objectID": "j3.5_estatística1_tools.html#uma-numérica",
    "href": "j3.5_estatística1_tools.html#uma-numérica",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "mean(x)                        \n\n\nmedian(x)\n\n\n# install.packages(\"lsr\")\nlibrary(\"lsr\")   \n\nmodeOf(x)\n\n\nsummary (x)\n\n\nmin (x)\n\n\nmax (x)\n\n\nrange(x)\n\n\n\nquantile (x, .50)         # quantil 2º\n\n\nquantile (x, .25)          # quartil 1º\n\n\nquantile (x, .75)         # quartil  3º\n\n\n\nvar(S$x)                  # Variância\n\n\nsd(S$x)                     # Desvío padrão (standard deviation)   \n\n\nsd(S$x) /  sqrt (length(S$x))      # Erro padrão (standard error)\n\n\n\n\n\n\nplot (x)    \n\n\nplot (x)\nablineabline (h= mean(x))           # Plot com média                  \n\nabline (h=median(x))                # mais mediana\n\nabline (h=modeOf(x),col=\"blue\")     # mais moda\n\n\n\n\n\n\npar (mfrow =c(1,3))      \n\nplot(x)\n\nplot(xB)\n\nplot(xC)\n\n\nplot(x, ylim=c(0,50))                \n\nplot(x, ylim= c(0,50), xlim=c(0,10)) \n\n\n\n\n\n\nhist(x)\n\nhist(x, right=F)                           # valor da direita no incluido\n\nhist(x, ylim= c(0,50), xlim=c(0,10))        \n\n\n\n\n\n\nstem(x)\n\n\n\n\n\n\ndotchart (x)\n\n\nstripchart(x, method = \"stack\", offset = .5  , at = .15    , pch = 19, cex=1)\n\n\n\n\n\n\n\n\n\n\nboxplot (x)\n\n\n\n\n\nboxplot (x, range=0)\n\n\n\n\n\n\npar (mfrow =c(2,1))  \nboxplot (x, range=0, horizontal=TRUE)\nhist(x)\n\n\n\n\n\n\n\npar (mfrow =c(2,3))  \nboxplot (x, range=0, horizontal=TRUE)\nboxplot (xB, range=0, horizontal=TRUE)\nboxplot (xC, range=0, horizontal=TRUE)\nhist(x)\nhist(xB)\nhist(xC)\n\n\n\n\n\n\nProporções\n\n\nt1 &lt;-table (x)\n\nt2 &lt;- cbind(Freq=t1, \n                Cumul=cumsum(t1), \n                Relative=prop.table(t1), \n                Cum.Rel.=cumsum(prop.table(t1) ) )\nt2\n\n\n\nPercentagens\n\n\nt2per &lt;- cbind(Freq=t1, \n               Cumul=cumsum(t1), \n               Relative=prop.table(t1)*100, \n               Cum.Rel.=cumsum(prop.table(t1)\n               *100))  ; \nt2per"
  },
  {
    "objectID": "j3.5_estatística1_tools.html#mais.",
    "href": "j3.5_estatística1_tools.html#mais.",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "plot (x, \n      frame=FALSE,\n      col = \"blue\", \n       main = \"x 2021\")\n\n\n\n\n\n\nhttps://www.statmethods.net/graphs/density.html\n\nd &lt;- density(x) # densidade da distribuição    \n\nplot(d) \n\n\nplot(d) # plots the results\npolygon(d, col=\"yellow\", border=\"red\")\n\n\n\n\n\n\nx &lt;- cars$speed\nh&lt;-hist(x, breaks=10, col=\"grey\", xlab=\"x por persona\",\n   main=\"Histograma com  Normal Curve\")\n\nxfit&lt;-seq(min(x),max(x),length=40)\n\nyfit&lt;-dnorm(xfit,mean=mean(x),sd=sd(x))\n\nyfit &lt;- yfit*diff(h$mids[1:2])*length(x)\n\nlines(xfit, yfit, col=\"green\", lwd=2)\n\n\n\nLabels_to_Points_in_Scatterplot\n\nplot(dist ~speed, col=\"lightblue\", pch=19, cex=2,data=cars)\n\ntext(dist~speed, labels=dist,data=cars, cex=0.9, font=2, pos=4)"
  },
  {
    "objectID": "j3.5_estatística1_tools.html#uma-categorica",
    "href": "j3.5_estatística1_tools.html#uma-categorica",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "t1 &lt;- table (var_cat)    \n\nt1     \n\nprop.table(t1 )\n\nprop.table(t1 )*100\n\nround (prop.table(t1 )*100, digits = 1)\n\naddmargins(t1)\n\n\nround (addmargins(prop.table(t1 )*100),1)\n\n\n\n\n\npie (t1 )        \n\npie (t1, labels = c(\"Não\", \"Sim\"))\n\n\n\n\nbarplot (t1 )        # frequências\n\n\nbarplot (prop.table(t1))    # proporções\n\n\nbarplot(t1 , horiz = TRUE)      # # posição horizontal        \n\n\nbarplot(t1, \n        main = \"Stress dos fumadores\",\n        xlab = \"Stress\", \n        ylab = \"Frequência\")"
  },
  {
    "objectID": "j3.5_estatística1_tools.html#tabela-1",
    "href": "j3.5_estatística1_tools.html#tabela-1",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "Frequências\n\nt2 &lt;- table (var_caty,var_catx)       \n\n\nround (addmargins (prop.table (t2,1) * 100), digits=2)"
  },
  {
    "objectID": "j3.5_estatística1_tools.html#barplot-1",
    "href": "j3.5_estatística1_tools.html#barplot-1",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "barplot (t2)\n\n\n\nbarplot(t2,\n         col=c(\"lightblue\", \"white\"),\n        legend = rownames(t2))\n\n\n\n\n\nplot(t2)"
  },
  {
    "objectID": "j3.5_estatística1_tools.html#categorica-quantitativa",
    "href": "j3.5_estatística1_tools.html#categorica-quantitativa",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "library(plyr)\n\nddply(Df,~var_catx,summarise,media=mean(var_numy))\n\n\nddply(Df,~var_catx,summarise,media=mean(Df$var_numy),median=median(Df$var_numy))"
  },
  {
    "objectID": "j3.5_estatística1_tools.html#boxplot-por-categoria",
    "href": "j3.5_estatística1_tools.html#boxplot-por-categoria",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "boxplot(Df$var_numy~Df$var_catx)"
  },
  {
    "objectID": "j3.5_estatística1_tools.html#numérica-numérica",
    "href": "j3.5_estatística1_tools.html#numérica-numérica",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "plot (D$var_numx, D$var_numy, pch=19)\n\n\n\n\n\n\ncor (D$var_numx, D$var_numy)\n\n\n\n\n\n\nlm (D$var_numy~D$var_numx)\n\n\n\n\n\n\nplot (D$var_numx, D$var_numy, pch=19)\nabline (a=mean(D$var_numy), b=0)\nabline(a=4.993, b=3.161, col=\"red\")   # abline(lm (D$var_numy~D$var_numx))"
  },
  {
    "objectID": "j3.5_estatística1_tools.html#mais",
    "href": "j3.5_estatística1_tools.html#mais",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "plot(D$var_numx, D$var_numy, main = \"Main title\",\n     xlab = \"X axis title\", \n     ylab = \"Y axis title\",\n     pch = 19, \n     frame = FALSE)\n\n# Add regression line\nabline(lm(D$var_numy ~ D$var_numx, data = D), col = \"blue\")\n\n# Add loess fit\nlines(lowess(D$var_numx, D$var_numy), col = \"red\")\n\n\n\n\n\n\nmod &lt;- lm(var_numy ~ var_numx, data = D)\n# predicts + interval\nnewx &lt;- seq(min(D$var_numx), max(D$var_numx), length.out=100)\npreds &lt;- predict(mod, newdata = data.frame(var_numx=newx), \n                 interval = 'confidence')\n\n# plot\nplot(D$var_numy ~ D$var_numx, data = D)\n# add fill\npolygon(c(rev(newx), newx), c(rev(preds[ ,3]), preds[ ,2]), border = NA)\n# model\nabline(mod)\n# intervals\nlines(newx, preds[ ,3], lty = 'dashed', col = 'red')\nlines(newx, preds[ ,2], lty = 'dashed', col = 'red')"
  },
  {
    "objectID": "j3.2_workspace.html",
    "href": "j3.2_workspace.html",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Componentes e elementos básicos de uma sessão R\n  \n\n\n\nCriar a pasta do projeto (e.g “Projeto_0”).\nIniciar sessão R.Studio (clicar no ícono), e:\n\n    &gt; clicar \"File\" (na barra de ferramentas principal)    \n        &gt; clicar \"New Project\"\n            &gt; clicar \"Existing Directory\"\n              &gt; [Procurar e selecionar a pasta (e.g.\"Projeto_0\")\\]\n                &gt; clicar \"Create Project\"\n\n\n\n\n\n\nAbrir a pasta do projeto, e:\n\n    &gt; cliclar \"File\" (na barra de ferramentas principal)\n        &gt; clicar no ficheiro \".Rproj\" do projeto (e.g. \"Projeto_0.Rproj\")\n\n\nObter informação sobre a sessaõ ativa:\n\n\nsessionInfo()       \n\n\n\nEspecificar numero de digitos para a sessão:\n\n\noptions(digits=4)\n\n \n\n\n\n\nLocalizar o working directory:\n\n\ngetwd()\n\n\n\nMudar localização do working directory:\n\n\nsetwd (\"/Users/Q/My_R/R_Project1\")     \n\n# R utiliza `/` (*forward slashes*) para designar subdirectorios (diferente a Windows, similar a Mac e Unix)\n\n\n\nListar os ficheiros do working directory:\n\n\nlist.files()\n\n\n\nListar objectos ativos nos workspace:\n\n\nls ( )          # listar os objetos da sessão    \n\nls(pat = \"c\")   # listar objetos que contêm ‘c’ nos seus nomes\n\nls(pat= \"^c\")   #  listar objects que comecem com  ‘c’\n\nls(pos=2)       # Check the contents of the file that has been attached \n\n\n\nRemover objectos ativos:\n\n\nrm(\"var1\" )         # remover objeto \"var1\"\n\nrm(list =ls() ) # remover todos os objetos da sessão\n\nrm(list=setdiff(ls(), \"B\"))   # remover todo menos \"B\"\n\nrm(list=setdiff(ls(), c(\"W\", \"X\")))   # remover todo menos \"W\" e \"X\"\n\n \n \n\n\n\n\nInstalar pacotes externos:\n\n\ninstall.packages (\"PackageName\")\n\n\n\nActivar pacotes já instalados:\n\n\nlibrary (PackageName)       \n                # Or: clicking packages on Window4/ Tab Packages\n                # Or via menu system: Packages&gt;Load Packages    \n\n\n\nCarregar bases internas:\n\n\ndata(aids)    # carregar base ‘aids’ (pacote ‘(KMsurv)’\n\n\n\nFechar um pacote:\n\n\ndetach (\"package:aids\") #detach data\n\n\n\nMais sobre pacotes:\n\n\nsearch ()                      # mostra pacotes abertos\n\nlibrary(help=KMsurv)        # mostra info sobre pacote KMsurv\n\n.libPaths()                 # localização da 'library', the ‘library’ subdirectory of R_HOME.\n\nlibrary ()           # script com  os pacotes instalados e na library (= pestana FILES)\n\n \n\nA qual pacote um certa função?\n\n\npackagename::functionname().\n\n\n\n\n\n?getwd               # information on the “getwd” function \n\n??getwd                # information on the “getwd” function\n\napropos (\"norm\")     # to find all functions in R that contains the string norm type)\n\n \n\n\n\n\nCriar scrip\n\nOpção a:\n\nFile -&gt; New File -&gt; R Script\n\n\nOpção b:\nNa barra de ferramentas da janela SOURCE:\n&gt; + -&gt; R Script\n\nOpção c:\n\nCtrl + Schift + N (Mac) PC? ?? PC?\n\n\n\nGuardar Scripts\n\nOpção a:\n\nFile -&gt; New File -&gt; R Script -&gt; Save/Save as/\n\n\nOpção b:\n\nusar o ícone da janela do script\n\n\n\nAbrir script existente\n\nOpção a:\n\nFile -&gt; Open File -&gt; (search script and open)\n\n\nOpção b:\n\nduplo-click no script, na janela FILES\n\n\n\nExecutar comandos no script\n\n\nsublinhar comando -&gt;Cmd+ENTER (Mac)\n\n\nsublinhar comando -&gt;Ctrl+R (Windows)\n\n \n\n\n\n\nCarregar objetos do ‘working directory’\n\n\n\nload (\"objecto_y\")      \n\nload (\"objectox_yx\")        \n\nload (“Minhabase\")\n\nload (\"WorkspaceProj1\")    \n\n\n\nCarregar objetos de outros diretorios:\n\n\nload (\"~/0R/pastaX//objecto_y\")  \n# se deve especificar a localização\n\n\n\nRecolher a localização de um ficheiro:\n\n\nfile.choose()   \n\n \n\n\n\n\nGuardar objetos no working directory:\n\n\nsave (y, file=\"object_y\")               # Guardar y como \"object_y\"     \n\nsave (y, x, file=\"object_yx\")           # Guardar y and x \n\nsave (minhabase, file=\"Minhabase.RData\")        # Guardar dataframe\n\nsave.image(file=\"WorkspaceProj1\")       # Guardar workspace\n\n\n\nGuardar objetos em outros directorios:\n\n\nsave (AA, file= \"~/0R/objecto_y\")  \n        # objecto_y= objeto R\n        # \"~/0R/objecto_y\"= posição e nome do objeto salvado\n\n\n\nGuardar Gráficos para pdf\n\n\npdf(\"Figura_1.pdf\")     # cria o ficheiro pdf\n\nplot (x)        # gera a figura\n\ndev.off()       # fecha o ficheiro\n\n# http://www.statmethods.net/interface/io.html\n\n\n\nGuardar Gráficos para jpeg:\n\n\npdf(\"Figura_1.jpg\", width = 500, height = 500)      # cria o ficheiro pdf\n\nplot (x)        # gera a figura\n\ndev.off()       # fecha o ficheiro\n\n\n\nGuardar outputs para um ‘text file’\n\n\n\nUsando sink() e imprimendo:\n\n\n# a) Criar o ficheiro\nsink(\"meu_documento.txt\")  \n\n#  b) Especificar um título interno\nprint(\"The mean of var1 x is…\") \n\n# c) produzir os dados (o output será imprimido no .txt, não na CONSOLA)\n    mean (x)\n    plot (x)\n\n# d) Finalizar o procedimento:\n    sink()\n\nb Usando sink() e cat():\n\n# a) Criar o ficheiro    \nsink(\"meu_documento.txt\")\n\n# b) Concatenar    \ncat(\"A média de varX é...\", mean(varX), \"\\n\") \n\n# c) Finalizar o procedimento:\nsink()\n\n\n\nCopy and paste.\n\nUma opção frequente é simplesmente copiar os resultados da CONSOLA ou PLOTS colar num documento Word  \n\n\n\n\nBases Excel:\n\n    &gt; Environment\n        &gt; Import Dataset\n            &gt; From Excel\n\n\nBases SPSS:\n\n    &gt; Environment\n        &gt; Import Dataset\n            &gt; From SPSS\n\n\nBases STATA:\n\n    &gt; Environment\n        &gt; Import Dataset\n            &gt; From STATA\n \n\n\n\n\nPara xlsx\n\n\n\nlibrary (openxlsx)   \nwrite.xlsx(Df, \"Df.xlsx\")\n\n\n\nPara CSV:\n\n\nwrite.table(Df, file=\"Df.csv\",sep=\",\",row.names=F)\n\n\n\nPara SPSS:\n\n\nlibrary(foreign)\nwrite.foreign(mydata, \"c:/mydata.txt\", \"c:/mydata.sps\",   package=\"SPSS\")\n\n\n\nPara SPSS:\n\n\nlibrary(foreign)\nwrite.dta(Df, \"Df.dta\") \n\n \n\n\n\n\nq()"
  },
  {
    "objectID": "j3.2_workspace.html#rproj-o-ficheiro-organizador",
    "href": "j3.2_workspace.html#rproj-o-ficheiro-organizador",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Criar a pasta do projeto (e.g “Projeto_0”).\nIniciar sessão R.Studio (clicar no ícono), e:\n\n    &gt; clicar \"File\" (na barra de ferramentas principal)    \n        &gt; clicar \"New Project\"\n            &gt; clicar \"Existing Directory\"\n              &gt; [Procurar e selecionar a pasta (e.g.\"Projeto_0\")\\]\n                &gt; clicar \"Create Project\""
  },
  {
    "objectID": "j3.2_workspace.html#iniciar-sessão",
    "href": "j3.2_workspace.html#iniciar-sessão",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Abrir a pasta do projeto, e:\n\n    &gt; cliclar \"File\" (na barra de ferramentas principal)\n        &gt; clicar no ficheiro \".Rproj\" do projeto (e.g. \"Projeto_0.Rproj\")\n\n\nObter informação sobre a sessaõ ativa:\n\n\nsessionInfo()       \n\n\n\nEspecificar numero de digitos para a sessão:\n\n\noptions(digits=4)"
  },
  {
    "objectID": "j3.2_workspace.html#workspace",
    "href": "j3.2_workspace.html#workspace",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Localizar o working directory:\n\n\ngetwd()\n\n\n\nMudar localização do working directory:\n\n\nsetwd (\"/Users/Q/My_R/R_Project1\")     \n\n# R utiliza `/` (*forward slashes*) para designar subdirectorios (diferente a Windows, similar a Mac e Unix)\n\n\n\nListar os ficheiros do working directory:\n\n\nlist.files()\n\n\n\nListar objectos ativos nos workspace:\n\n\nls ( )          # listar os objetos da sessão    \n\nls(pat = \"c\")   # listar objetos que contêm ‘c’ nos seus nomes\n\nls(pat= \"^c\")   #  listar objects que comecem com  ‘c’\n\nls(pos=2)       # Check the contents of the file that has been attached \n\n\n\nRemover objectos ativos:\n\n\nrm(\"var1\" )         # remover objeto \"var1\"\n\nrm(list =ls() ) # remover todos os objetos da sessão\n\nrm(list=setdiff(ls(), \"B\"))   # remover todo menos \"B\"\n\nrm(list=setdiff(ls(), c(\"W\", \"X\")))   # remover todo menos \"W\" e \"X\""
  },
  {
    "objectID": "j3.2_workspace.html#pacotes",
    "href": "j3.2_workspace.html#pacotes",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Instalar pacotes externos:\n\n\ninstall.packages (\"PackageName\")\n\n\n\nActivar pacotes já instalados:\n\n\nlibrary (PackageName)       \n                # Or: clicking packages on Window4/ Tab Packages\n                # Or via menu system: Packages&gt;Load Packages    \n\n\n\nCarregar bases internas:\n\n\ndata(aids)    # carregar base ‘aids’ (pacote ‘(KMsurv)’\n\n\n\nFechar um pacote:\n\n\ndetach (\"package:aids\") #detach data\n\n\n\nMais sobre pacotes:\n\n\nsearch ()                      # mostra pacotes abertos\n\nlibrary(help=KMsurv)        # mostra info sobre pacote KMsurv\n\n.libPaths()                 # localização da 'library', the ‘library’ subdirectory of R_HOME.\n\nlibrary ()           # script com  os pacotes instalados e na library (= pestana FILES)\n\n \n\nA qual pacote um certa função?\n\n\npackagename::functionname()."
  },
  {
    "objectID": "j3.2_workspace.html#ajudas",
    "href": "j3.2_workspace.html#ajudas",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "?getwd               # information on the “getwd” function \n\n??getwd                # information on the “getwd” function\n\napropos (\"norm\")     # to find all functions in R that contains the string norm type)"
  },
  {
    "objectID": "j3.2_workspace.html#scripts",
    "href": "j3.2_workspace.html#scripts",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Criar scrip\n\nOpção a:\n\nFile -&gt; New File -&gt; R Script\n\n\nOpção b:\nNa barra de ferramentas da janela SOURCE:\n&gt; + -&gt; R Script\n\nOpção c:\n\nCtrl + Schift + N (Mac) PC? ?? PC?\n\n\n\nGuardar Scripts\n\nOpção a:\n\nFile -&gt; New File -&gt; R Script -&gt; Save/Save as/\n\n\nOpção b:\n\nusar o ícone da janela do script\n\n\n\nAbrir script existente\n\nOpção a:\n\nFile -&gt; Open File -&gt; (search script and open)\n\n\nOpção b:\n\nduplo-click no script, na janela FILES\n\n\n\nExecutar comandos no script\n\n\nsublinhar comando -&gt;Cmd+ENTER (Mac)\n\n\nsublinhar comando -&gt;Ctrl+R (Windows)"
  },
  {
    "objectID": "j3.2_workspace.html#carregar-objetos",
    "href": "j3.2_workspace.html#carregar-objetos",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Carregar objetos do ‘working directory’\n\n\n\nload (\"objecto_y\")      \n\nload (\"objectox_yx\")        \n\nload (“Minhabase\")\n\nload (\"WorkspaceProj1\")    \n\n\n\nCarregar objetos de outros diretorios:\n\n\nload (\"~/0R/pastaX//objecto_y\")  \n# se deve especificar a localização\n\n\n\nRecolher a localização de um ficheiro:\n\n\nfile.choose()"
  },
  {
    "objectID": "j3.2_workspace.html#guardar-objetos",
    "href": "j3.2_workspace.html#guardar-objetos",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Guardar objetos no working directory:\n\n\nsave (y, file=\"object_y\")               # Guardar y como \"object_y\"     \n\nsave (y, x, file=\"object_yx\")           # Guardar y and x \n\nsave (minhabase, file=\"Minhabase.RData\")        # Guardar dataframe\n\nsave.image(file=\"WorkspaceProj1\")       # Guardar workspace\n\n\n\nGuardar objetos em outros directorios:\n\n\nsave (AA, file= \"~/0R/objecto_y\")  \n        # objecto_y= objeto R\n        # \"~/0R/objecto_y\"= posição e nome do objeto salvado\n\n\n\nGuardar Gráficos para pdf\n\n\npdf(\"Figura_1.pdf\")     # cria o ficheiro pdf\n\nplot (x)        # gera a figura\n\ndev.off()       # fecha o ficheiro\n\n# http://www.statmethods.net/interface/io.html\n\n\n\nGuardar Gráficos para jpeg:\n\n\npdf(\"Figura_1.jpg\", width = 500, height = 500)      # cria o ficheiro pdf\n\nplot (x)        # gera a figura\n\ndev.off()       # fecha o ficheiro\n\n\n\nGuardar outputs para um ‘text file’\n\n\n\nUsando sink() e imprimendo:\n\n\n# a) Criar o ficheiro\nsink(\"meu_documento.txt\")  \n\n#  b) Especificar um título interno\nprint(\"The mean of var1 x is…\") \n\n# c) produzir os dados (o output será imprimido no .txt, não na CONSOLA)\n    mean (x)\n    plot (x)\n\n# d) Finalizar o procedimento:\n    sink()\n\nb Usando sink() e cat():\n\n# a) Criar o ficheiro    \nsink(\"meu_documento.txt\")\n\n# b) Concatenar    \ncat(\"A média de varX é...\", mean(varX), \"\\n\") \n\n# c) Finalizar o procedimento:\nsink()\n\n\n\nCopy and paste.\n\nUma opção frequente é simplesmente copiar os resultados da CONSOLA ou PLOTS colar num documento Word"
  },
  {
    "objectID": "j3.2_workspace.html#importar-bases",
    "href": "j3.2_workspace.html#importar-bases",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Bases Excel:\n\n    &gt; Environment\n        &gt; Import Dataset\n            &gt; From Excel\n\n\nBases SPSS:\n\n    &gt; Environment\n        &gt; Import Dataset\n            &gt; From SPSS\n\n\nBases STATA:\n\n    &gt; Environment\n        &gt; Import Dataset\n            &gt; From STATA"
  },
  {
    "objectID": "j3.2_workspace.html#exportar-bases",
    "href": "j3.2_workspace.html#exportar-bases",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "Para xlsx\n\n\n\nlibrary (openxlsx)   \nwrite.xlsx(Df, \"Df.xlsx\")\n\n\n\nPara CSV:\n\n\nwrite.table(Df, file=\"Df.csv\",sep=\",\",row.names=F)\n\n\n\nPara SPSS:\n\n\nlibrary(foreign)\nwrite.foreign(mydata, \"c:/mydata.txt\", \"c:/mydata.sps\",   package=\"SPSS\")\n\n\n\nPara SPSS:\n\n\nlibrary(foreign)\nwrite.dta(Df, \"Df.dta\")"
  },
  {
    "objectID": "j3.2_workspace.html#fechar-sessão",
    "href": "j3.2_workspace.html#fechar-sessão",
    "title": "Gestão do Workspace",
    "section": "",
    "text": "q()"
  },
  {
    "objectID": "j3.4_dataframes.html",
    "href": "j3.4_dataframes.html",
    "title": "Dataframes",
    "section": "",
    "text": "Standard data.frame\n\n\nDf &lt;-data.frame (\n            id = c(1, 1, 2, 3, 3, 5),\n            cigarros = c(15,15, 19, 14, 12, 15),\n            sexo = c(0, 0, 1, 1, 0,0),\n            cidade = c(\"Lisboa\",\"Lisboa\", \"Lisboa\", \"Porto\", \"Lisboa\", \"Portimão\"),\n            grupo = c(\"A\",\"A\", \"C\", \"C\", \"B\", \"B\"),\n            stress = c (4,4,4,2,1,39))\n\n \n\ntibble dataset\n\n\ntibble (\n            id = c(1, 2, 3, 3, 5),\n            cigarros = c(15, 19, 14, 12, 15),\n            sexo = c(0, 1, 1, 0,0),\n            cidade = c(\"Lisboa\", \"Lisboa\", \"Porto\", \"Lisboa\", \"Portimão\"),\n            grupo = c(\"A\", \"C\", \"C\", \"B\", \"B\"),\n            stress = c (4,4,2,1,39)\n)\n\ntibble allows names not valid for dataframes\n\nlibrary (tidyverse)\n\ntibble (\n        `:)`  = \"smile\",\n        ` `   = \"space\",\n        `2000`= \"number\"\n)\n\nother way, with tribble\n\ntribble(\n    ~x, ~y, ~z,\n  #--/--/----\n  \"a\", 2, 3.6,\n  \"b\", 1, 8.5\n)\n\n \n\n\n\n\nclass (Df)          # classe\n\nnrow (Df)           # número de linhas     \n\nncol (Df)           # número de colunas    \n\ndim(Df)             # dimensão (linhas & colunas)   \n\nnames (Df)          # nome das variáveis      \n\nhead (Df, 3)        # Primeiras  observações       \n\ntail (Df, 2)          # Ultimas observações    \n\nstr (Df)            # Estrutura da base     \n\nobject.size(Df)     # tamanho em bytes\n\nsummary(Df)           # Sumário para cada variável     \n\n \n\n\n\n\n\n\nDf[duplicated(Df), ]\n\n  id cigarros sexo cidade grupo stress\n2  1       15    0 Lisboa     A      4\n\n\n\n\n\n\n\ndetectar:\n\n\ntmm &lt;- table (Df$id)   ; tmm &lt;- as.data.frame(tmm)\n\nNcases &lt;-max(tmm$Freq)\nifelse (Ncases==1, \"OK, no double id\", \"Double id detected, clicar abaixo.\")\n\n[1] \"Double id detected, clicar abaixo.\"\n\n\n\n\nvisualizar:\n\n\nqqq &lt;- Df$id[tmm$Freq&gt;1]\nDf[which(Df$id==qqq),]\n\n  id cigarros sexo cidade grupo stress\n1  1       15    0 Lisboa     A      4\n\n\n \n\n\n\n\n\n\n\nDf$var6 &lt;- 1                \n\nDf$var7 &lt;- Df$var6 + Df$stress  \n\nDf$idade &lt;- c(21,21,32,13,54,15)        \n\nDf\n\n  id cigarros sexo   cidade grupo stress var6 var7 idade\n1  1       15    0   Lisboa     A      4    1    5    21\n2  1       15    0   Lisboa     A      4    1    5    21\n3  2       19    1   Lisboa     C      4    1    5    32\n4  3       14    1    Porto     C      2    1    3    13\n5  3       12    0   Lisboa     B      1    1    2    54\n6  5       15    0 Portimão     B     39    1   40    15\n\n\n\n\nDf$bigcity &lt;- Df$cidade %in% c(\"Lisboa\", \"Porto\")\n\nDf[, c(\"id\",\"cidade\", \"bigcity\")]\n\n  id   cidade bigcity\n1  1   Lisboa    TRUE\n2  1   Lisboa    TRUE\n3  2   Lisboa    TRUE\n4  3    Porto    TRUE\n5  3   Lisboa    TRUE\n6  5 Portimão   FALSE\n\n\n\n\n\n\nDf$id3  &lt;-  1: nrow(Df) \n\nDf$idl &lt;- letters [1:nrow(Df)]   # with letters\n\nDf\n\n  id cigarros sexo   cidade grupo stress var6 var7 idade bigcity id3 idl\n1  1       15    0   Lisboa     A      4    1    5    21    TRUE   1   a\n2  1       15    0   Lisboa     A      4    1    5    21    TRUE   2   b\n3  2       19    1   Lisboa     C      4    1    5    32    TRUE   3   c\n4  3       14    1    Porto     C      2    1    3    13    TRUE   4   d\n5  3       12    0   Lisboa     B      1    1    2    54    TRUE   5   e\n6  5       15    0 Portimão     B     39    1   40    15   FALSE   6   f\n\n\n\n\n\n\n(várias maneiras)\n\n\n\nDf$id_spell_sex &lt;- with(Df, ave(rep(1, nrow(Df)), sexo, FUN = seq_along))\n\nDf[order(Df$sexo), c(\"id\",\"sexo\", \"id_spell_sex\")]\n\n  id sexo id_spell_sex\n1  1    0            1\n2  1    0            2\n5  3    0            3\n6  5    0            4\n3  2    1            1\n4  3    1            2\n\n\n\n\n\n\n\n\nlibrary(dplyr)\n\nDf &lt;-Df %&gt;% group_by(cidade) %&gt;% mutate(id_spell_cidade = row_number(cidade))\n\nDf[order(Df$cidade), c(\"id\",\"cidade\", \"id_spell_cidade\")]\n\n \n\n\n\n\n\n\nVárias opções:\n\nDf$stress       &lt;- NULL\n\nS[4]    &lt;- NULL     \n\nS [\"stress\"]    &lt;- NULL  \n\n\nS &lt;- S[,-4]     \n\n\n\n\n\n\nS&lt;-S[-39,]      # elimina row 39 \n\n \n\n\n\n\n\n\n\nnames (S) &lt;- c(\"Q1\", \"Q2\", \"Q3\")   # list in ORDER ALL the vars of S\n\n\n\n\n\n\nnames(S)[3] &lt;- \"Country\"    \n\n\n\n\n\n\nnames(Df) [names(Df)==\"cigarros\"] &lt;- \"cig\"  \n\n\n\n\n\n\nlibrary(reshape)    \n\nrename(Df, c(var1=\"x1\"))    \n\n\n\n\n\n \n\n\n\n\n\n\n\ndata &lt;- data[,c(1:3,5,4)]\n\n\n\n\n\n\nnames &lt;- c(\"v1\", \"v2\", \"v3\", \"v5\", \"v4\") \ndata &lt;- data[names]\n\n \n\n\n\n\n\nDf [order(Df$cigarros),]                    # ordenar Df por cigarros\n\nDf [order(Df$cigarros, Df$stress),]     #... por cigarros e stress\n\nDf [order(Df$cigarros, -Df$stress),]    #... por cig (asc) e stress\n\nDf [order(Df$cigarros, -Df$stress),]      #...por cig (asc.) e stress (desc.)\n\n\n\n\n \n\n\n\n\n\n\n\nrownames (Df)                 \n\n\n\n\n\n\nrownames (Df)  &lt;- 1:5\n\n\n\n\n\n\nrow.names(Df) &lt;- NULL \n\n \n\n\n\n\n\n\n\nDf[c(\"sexo\", \"cidade\")]     #subset including sexo, cidade\nDf[c( 3,4)]             #idem\n\nDf[c(-1, -3)]           #subset excluindo v1,v3\nDf[- c(1, 3)]           #idem\n\n\n\n\n\n\nDf [1  , ]      # linha 1       , colunas todas\n\nDf [ ,3 ]        # linhas todas, coluna 3\n\nDf [1  ,3 ]         #  linha 1      , coluna 3\n\nDf [1:4, ]  # linhas 1 a 4  , colunas todas\n\nDf [ , 2:5]     # linhas todas  , colunas 2 a 5\n\nDf [c(1,2,3,4), c(2,3,4,5)]\n\nDf [  ,-c(1,2)]  # linhas todas, colunas todas menos 1 e 2\n\n \n\n\n\n\nDf [which(Df$cidade == \"Lisboa\") , ]\n\nDf [  , c(\"cidade\", \"cigarros\", \"sexo\") ]\n\nDf [which(Df$cidade == \"Lisboa\"), c(\"cidade\", \"cigarros\", \"sexo\") ]\n\n\n\n\n\n\nsubset (Df, cidade &lt;= \"Lisboa\",   select=c(cidade, cigarros, sexo)) \n\n  cidade cigarros sexo\n1 Lisboa       15    0\n2 Lisboa       15    0\n3 Lisboa       19    1\n5 Lisboa       12    0\n\n\n\n\n\n\n \n\n\n\n\n\n\n\ntotal &lt;- merge(dataframeA, dataframeB, by=\"id\")\n\n\nall.x\n\n\ntotal &lt;- merge(dataframeX, dataframeY, by=\"id\", all.x=TRUE )\n\nLinhas extras serão adicionadas, uma para cada linha em x que não tenha nenhuma linha correspondente em y. \n\nall.y\n\n\ntotal &lt;- merge(dataframeX, dataframeY, by=\"id\", all.y=TRUE )\n\nLinhas extras serão adicionadas, uma para cada linha em y que não tenha nenhuma linha correspondente em x. \n\nall\n\n\ntotal &lt;- merge(dataframeA, dataframeB, by=\"id\", all=TRUE )\n\n\n\n\n\n\nOpção basica\n\n\nmytempdata = merge(myDf, mydata2)(mytempdata = merge(mytempdata, mydata3)(.((mytempdata = merge(mytempdata, mydata20)\n\n\n\ncom função\n\n\nmultmerge = function(mypath){\nfilenames=list.files(path=mypath, full.names=TRUE)\ndatalist = lapply(filenames, function(x){read.csv(file=x,header=T)})\nReduce(function(x,y) {merge(x,y)}, datalist)\n\n\n\ncom inner_join -pacote dplyr\n\n\nlibrary(dplyr)\ndf &lt;- inner_join(df1, df2)\ndf &lt;- inner_join(df, df3)\n\n\n\n\n\nUsar rbind() para integrar dataframes verticalmente\n\ntotal &lt;- rbind(data frameA, data frameB)\n\nOs bases de dados devem ter as mesmas variáveis, mas não precisam estar na mesma ordem.\nSe a base A tiver variáveis que a base B não tem, então:\na) Exclua as variáveis extras na base A; ou.\nb). Crie as variáveis adicionais na base B e defina-as como NA antes de integra-las.\n\n\n\n\n\ncbind ???\n\n \n\n\n\n\n(mais info aqui)\nOs dados são considerados como:\n- formato wide (uma linha por sujeito) quando há uma linha de observação por sujeito com cada medição presente como uma variável diferente e\n- Formato long (várias linhas por sujeito) quando há uma linha de observação por medição.\n\n\n\n\nlibrary (reshape2)\n\ndata_wide &lt;- dcast(Df,   port_field + port_ch ~ port_spell_matrix, value.var=\"port_field\")\nView(data_wide2)"
  },
  {
    "objectID": "j3.4_dataframes.html#criação",
    "href": "j3.4_dataframes.html#criação",
    "title": "Dataframes",
    "section": "",
    "text": "Standard data.frame\n\n\nDf &lt;-data.frame (\n            id = c(1, 1, 2, 3, 3, 5),\n            cigarros = c(15,15, 19, 14, 12, 15),\n            sexo = c(0, 0, 1, 1, 0,0),\n            cidade = c(\"Lisboa\",\"Lisboa\", \"Lisboa\", \"Porto\", \"Lisboa\", \"Portimão\"),\n            grupo = c(\"A\",\"A\", \"C\", \"C\", \"B\", \"B\"),\n            stress = c (4,4,4,2,1,39))\n\n \n\ntibble dataset\n\n\ntibble (\n            id = c(1, 2, 3, 3, 5),\n            cigarros = c(15, 19, 14, 12, 15),\n            sexo = c(0, 1, 1, 0,0),\n            cidade = c(\"Lisboa\", \"Lisboa\", \"Porto\", \"Lisboa\", \"Portimão\"),\n            grupo = c(\"A\", \"C\", \"C\", \"B\", \"B\"),\n            stress = c (4,4,2,1,39)\n)\n\ntibble allows names not valid for dataframes\n\nlibrary (tidyverse)\n\ntibble (\n        `:)`  = \"smile\",\n        ` `   = \"space\",\n        `2000`= \"number\"\n)\n\nother way, with tribble\n\ntribble(\n    ~x, ~y, ~z,\n  #--/--/----\n  \"a\", 2, 3.6,\n  \"b\", 1, 8.5\n)"
  },
  {
    "objectID": "j3.4_dataframes.html#exploração",
    "href": "j3.4_dataframes.html#exploração",
    "title": "Dataframes",
    "section": "",
    "text": "class (Df)          # classe\n\nnrow (Df)           # número de linhas     \n\nncol (Df)           # número de colunas    \n\ndim(Df)             # dimensão (linhas & colunas)   \n\nnames (Df)          # nome das variáveis      \n\nhead (Df, 3)        # Primeiras  observações       \n\ntail (Df, 2)          # Ultimas observações    \n\nstr (Df)            # Estrutura da base     \n\nobject.size(Df)     # tamanho em bytes\n\nsummary(Df)           # Sumário para cada variável"
  },
  {
    "objectID": "j3.4_dataframes.html#duplicados",
    "href": "j3.4_dataframes.html#duplicados",
    "title": "Dataframes",
    "section": "",
    "text": "Df[duplicated(Df), ]\n\n  id cigarros sexo cidade grupo stress\n2  1       15    0 Lisboa     A      4\n\n\n\n\n\n\n\ndetectar:\n\n\ntmm &lt;- table (Df$id)   ; tmm &lt;- as.data.frame(tmm)\n\nNcases &lt;-max(tmm$Freq)\nifelse (Ncases==1, \"OK, no double id\", \"Double id detected, clicar abaixo.\")\n\n[1] \"Double id detected, clicar abaixo.\"\n\n\n\n\nvisualizar:\n\n\nqqq &lt;- Df$id[tmm$Freq&gt;1]\nDf[which(Df$id==qqq),]\n\n  id cigarros sexo cidade grupo stress\n1  1       15    0 Lisboa     A      4"
  },
  {
    "objectID": "j3.4_dataframes.html#criação-de-variáveis",
    "href": "j3.4_dataframes.html#criação-de-variáveis",
    "title": "Dataframes",
    "section": "",
    "text": "Df$var6 &lt;- 1                \n\nDf$var7 &lt;- Df$var6 + Df$stress  \n\nDf$idade &lt;- c(21,21,32,13,54,15)        \n\nDf\n\n  id cigarros sexo   cidade grupo stress var6 var7 idade\n1  1       15    0   Lisboa     A      4    1    5    21\n2  1       15    0   Lisboa     A      4    1    5    21\n3  2       19    1   Lisboa     C      4    1    5    32\n4  3       14    1    Porto     C      2    1    3    13\n5  3       12    0   Lisboa     B      1    1    2    54\n6  5       15    0 Portimão     B     39    1   40    15\n\n\n\n\nDf$bigcity &lt;- Df$cidade %in% c(\"Lisboa\", \"Porto\")\n\nDf[, c(\"id\",\"cidade\", \"bigcity\")]\n\n  id   cidade bigcity\n1  1   Lisboa    TRUE\n2  1   Lisboa    TRUE\n3  2   Lisboa    TRUE\n4  3    Porto    TRUE\n5  3   Lisboa    TRUE\n6  5 Portimão   FALSE\n\n\n\n\n\n\nDf$id3  &lt;-  1: nrow(Df) \n\nDf$idl &lt;- letters [1:nrow(Df)]   # with letters\n\nDf\n\n  id cigarros sexo   cidade grupo stress var6 var7 idade bigcity id3 idl\n1  1       15    0   Lisboa     A      4    1    5    21    TRUE   1   a\n2  1       15    0   Lisboa     A      4    1    5    21    TRUE   2   b\n3  2       19    1   Lisboa     C      4    1    5    32    TRUE   3   c\n4  3       14    1    Porto     C      2    1    3    13    TRUE   4   d\n5  3       12    0   Lisboa     B      1    1    2    54    TRUE   5   e\n6  5       15    0 Portimão     B     39    1   40    15   FALSE   6   f\n\n\n\n\n\n\n(várias maneiras)\n\n\n\nDf$id_spell_sex &lt;- with(Df, ave(rep(1, nrow(Df)), sexo, FUN = seq_along))\n\nDf[order(Df$sexo), c(\"id\",\"sexo\", \"id_spell_sex\")]\n\n  id sexo id_spell_sex\n1  1    0            1\n2  1    0            2\n5  3    0            3\n6  5    0            4\n3  2    1            1\n4  3    1            2\n\n\n\n\n\n\n\n\nlibrary(dplyr)\n\nDf &lt;-Df %&gt;% group_by(cidade) %&gt;% mutate(id_spell_cidade = row_number(cidade))\n\nDf[order(Df$cidade), c(\"id\",\"cidade\", \"id_spell_cidade\")]"
  },
  {
    "objectID": "j3.4_dataframes.html#eliminar-variáveis-e-observações",
    "href": "j3.4_dataframes.html#eliminar-variáveis-e-observações",
    "title": "Dataframes",
    "section": "",
    "text": "Várias opções:\n\nDf$stress       &lt;- NULL\n\nS[4]    &lt;- NULL     \n\nS [\"stress\"]    &lt;- NULL  \n\n\nS &lt;- S[,-4]     \n\n\n\n\n\n\nS&lt;-S[-39,]      # elimina row 39"
  },
  {
    "objectID": "j3.4_dataframes.html#mudar-nome-de-variáveis",
    "href": "j3.4_dataframes.html#mudar-nome-de-variáveis",
    "title": "Dataframes",
    "section": "",
    "text": "names (S) &lt;- c(\"Q1\", \"Q2\", \"Q3\")   # list in ORDER ALL the vars of S\n\n\n\n\n\n\nnames(S)[3] &lt;- \"Country\"    \n\n\n\n\n\n\nnames(Df) [names(Df)==\"cigarros\"] &lt;- \"cig\"  \n\n\n\n\n\n\nlibrary(reshape)    \n\nrename(Df, c(var1=\"x1\"))"
  },
  {
    "objectID": "j3.4_dataframes.html#reordenar-variáveis",
    "href": "j3.4_dataframes.html#reordenar-variáveis",
    "title": "Dataframes",
    "section": "",
    "text": "data &lt;- data[,c(1:3,5,4)]\n\n\n\n\n\n\nnames &lt;- c(\"v1\", \"v2\", \"v3\", \"v5\", \"v4\") \ndata &lt;- data[names]"
  },
  {
    "objectID": "j3.4_dataframes.html#ordenar-a-base",
    "href": "j3.4_dataframes.html#ordenar-a-base",
    "title": "Dataframes",
    "section": "",
    "text": "Df [order(Df$cigarros),]                    # ordenar Df por cigarros\n\nDf [order(Df$cigarros, Df$stress),]     #... por cigarros e stress\n\nDf [order(Df$cigarros, -Df$stress),]    #... por cig (asc) e stress\n\nDf [order(Df$cigarros, -Df$stress),]      #...por cig (asc.) e stress (desc.)"
  },
  {
    "objectID": "j3.4_dataframes.html#rownames",
    "href": "j3.4_dataframes.html#rownames",
    "title": "Dataframes",
    "section": "",
    "text": "rownames (Df)                 \n\n\n\n\n\n\nrownames (Df)  &lt;- 1:5\n\n\n\n\n\n\nrow.names(Df) &lt;- NULL"
  },
  {
    "objectID": "j3.4_dataframes.html#subsetting",
    "href": "j3.4_dataframes.html#subsetting",
    "title": "Dataframes",
    "section": "",
    "text": "Df[c(\"sexo\", \"cidade\")]     #subset including sexo, cidade\nDf[c( 3,4)]             #idem\n\nDf[c(-1, -3)]           #subset excluindo v1,v3\nDf[- c(1, 3)]           #idem\n\n\n\n\n\n\nDf [1  , ]      # linha 1       , colunas todas\n\nDf [ ,3 ]        # linhas todas, coluna 3\n\nDf [1  ,3 ]         #  linha 1      , coluna 3\n\nDf [1:4, ]  # linhas 1 a 4  , colunas todas\n\nDf [ , 2:5]     # linhas todas  , colunas 2 a 5\n\nDf [c(1,2,3,4), c(2,3,4,5)]\n\nDf [  ,-c(1,2)]  # linhas todas, colunas todas menos 1 e 2\n\n \n\n\n\n\nDf [which(Df$cidade == \"Lisboa\") , ]\n\nDf [  , c(\"cidade\", \"cigarros\", \"sexo\") ]\n\nDf [which(Df$cidade == \"Lisboa\"), c(\"cidade\", \"cigarros\", \"sexo\") ]\n\n\n\n\n\n\nsubset (Df, cidade &lt;= \"Lisboa\",   select=c(cidade, cigarros, sexo)) \n\n  cidade cigarros sexo\n1 Lisboa       15    0\n2 Lisboa       15    0\n3 Lisboa       19    1\n5 Lisboa       12    0"
  },
  {
    "objectID": "j3.4_dataframes.html#merge",
    "href": "j3.4_dataframes.html#merge",
    "title": "Dataframes",
    "section": "",
    "text": "total &lt;- merge(dataframeA, dataframeB, by=\"id\")\n\n\nall.x\n\n\ntotal &lt;- merge(dataframeX, dataframeY, by=\"id\", all.x=TRUE )\n\nLinhas extras serão adicionadas, uma para cada linha em x que não tenha nenhuma linha correspondente em y. \n\nall.y\n\n\ntotal &lt;- merge(dataframeX, dataframeY, by=\"id\", all.y=TRUE )\n\nLinhas extras serão adicionadas, uma para cada linha em y que não tenha nenhuma linha correspondente em x. \n\nall\n\n\ntotal &lt;- merge(dataframeA, dataframeB, by=\"id\", all=TRUE )\n\n\n\n\n\n\nOpção basica\n\n\nmytempdata = merge(myDf, mydata2)(mytempdata = merge(mytempdata, mydata3)(.((mytempdata = merge(mytempdata, mydata20)\n\n\n\ncom função\n\n\nmultmerge = function(mypath){\nfilenames=list.files(path=mypath, full.names=TRUE)\ndatalist = lapply(filenames, function(x){read.csv(file=x,header=T)})\nReduce(function(x,y) {merge(x,y)}, datalist)\n\n\n\ncom inner_join -pacote dplyr\n\n\nlibrary(dplyr)\ndf &lt;- inner_join(df1, df2)\ndf &lt;- inner_join(df, df3)\n\n\n\n\n\nUsar rbind() para integrar dataframes verticalmente\n\ntotal &lt;- rbind(data frameA, data frameB)\n\nOs bases de dados devem ter as mesmas variáveis, mas não precisam estar na mesma ordem.\nSe a base A tiver variáveis que a base B não tem, então:\na) Exclua as variáveis extras na base A; ou.\nb). Crie as variáveis adicionais na base B e defina-as como NA antes de integra-las.\n\n\n\n\n\ncbind ???"
  },
  {
    "objectID": "j3.4_dataframes.html#reshape",
    "href": "j3.4_dataframes.html#reshape",
    "title": "Dataframes",
    "section": "",
    "text": "(mais info aqui)\nOs dados são considerados como:\n- formato wide (uma linha por sujeito) quando há uma linha de observação por sujeito com cada medição presente como uma variável diferente e\n- Formato long (várias linhas por sujeito) quando há uma linha de observação por medição.\n\n\n\n\nlibrary (reshape2)\n\ndata_wide &lt;- dcast(Df,   port_field + port_ch ~ port_spell_matrix, value.var=\"port_field\")\nView(data_wide2)"
  },
  {
    "objectID": "j3.5_GRAFICOS.html",
    "href": "j3.5_GRAFICOS.html",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "duração &lt;- c(200, 240, 140, 120, 150, 230, 190, 140, 80, 210, 200, 80, 80, 110, 190, 110)\n\n\n\n\n\nplot(duração, \n     main = \"Duração dos Eventos\",  # Título do gráfico\n     xlab = \"Número do Evento\",      # Rótulo para o eixo x\n     ylab = \"Duração (minutos)\",    # Rótulo para o eixo y\n     pch = 16,                      # Caráter do ponto\n     col = \"blue\"                   # Cor do ponto\n)\n\n\n\n\n\n\nbarplot(duração, \n        names.arg = seq_along(duração),  # Números dos eventos no eixo x\n        main = \"Duração dos Eventos\",     # Título do gráfico\n        xlab = \"Número do Evento\",        # Rótulo para o eixo x\n        ylab = \"Duração (dias)\",          # Rótulo para o eixo y\n        col = \"skyblue\"                   # Cor das barras\n)\n\n\n\n\n\n\nhist(duração, \n     main = \"Distribuição da Duração dos Eventos\",   # Título do histograma\n     xlab = \"Duração (días)\",                        # Rótulo para o eixo x\n     ylab = \"Frequência\",                           # Rótulo para o eixo y\n     col = \"lightgreen\",                            # Cor das barras\n     border = \"black\"                               # Cor da borda das barras\n)\n\n\n\n\n\n\nboxplot(duração,\n        main = \"Boxplot da Duração dos Eventos\",  # Título do boxplot\n        ylab = \"Duração (minutos)\",              # Rótulo para o eixo y\n        col = \"lightcoral\",                       # Cor das caixas\n        border = \"black\"                         # Cor da borda das caixas\n)\n\n\n\n\n\n\nplot(duração, \n     type = \"l\", \n     col = \"red\", \n     lty = 1, \n     lwd = 2,\n     main = \"Gráfico de Linhas da Duração dos Eventos\",\n     xlab = \"Número do Evento\", \n     ylab = \"Duração (minutos)\")\n\n\n\n\n\n\npie(table(duração), \n    main = \"Gráfico de Pizza da Duração dos Eventos\")\n\n\n\n\n\n\nplot(density(duração), main = \"Gráfico de Área da Duração dos Eventos\",\n     xlab = \"Duração (minutos)\", ylab = \"Densidade\", col = \"blue\", lwd = 2)"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#gráfico-de-dispersão",
    "href": "j3.5_GRAFICOS.html#gráfico-de-dispersão",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "plot(duração, \n     main = \"Duração dos Eventos\",  # Título do gráfico\n     xlab = \"Número do Evento\",      # Rótulo para o eixo x\n     ylab = \"Duração (minutos)\",    # Rótulo para o eixo y\n     pch = 16,                      # Caráter do ponto\n     col = \"blue\"                   # Cor do ponto\n)"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#gráfico-de-barras",
    "href": "j3.5_GRAFICOS.html#gráfico-de-barras",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "barplot(duração, \n        names.arg = seq_along(duração),  # Números dos eventos no eixo x\n        main = \"Duração dos Eventos\",     # Título do gráfico\n        xlab = \"Número do Evento\",        # Rótulo para o eixo x\n        ylab = \"Duração (dias)\",          # Rótulo para o eixo y\n        col = \"skyblue\"                   # Cor das barras\n)"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#histograma",
    "href": "j3.5_GRAFICOS.html#histograma",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "hist(duração, \n     main = \"Distribuição da Duração dos Eventos\",   # Título do histograma\n     xlab = \"Duração (días)\",                        # Rótulo para o eixo x\n     ylab = \"Frequência\",                           # Rótulo para o eixo y\n     col = \"lightgreen\",                            # Cor das barras\n     border = \"black\"                               # Cor da borda das barras\n)"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#boxplot",
    "href": "j3.5_GRAFICOS.html#boxplot",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "boxplot(duração,\n        main = \"Boxplot da Duração dos Eventos\",  # Título do boxplot\n        ylab = \"Duração (minutos)\",              # Rótulo para o eixo y\n        col = \"lightcoral\",                       # Cor das caixas\n        border = \"black\"                         # Cor da borda das caixas\n)"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#gráfico-de-linhas",
    "href": "j3.5_GRAFICOS.html#gráfico-de-linhas",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "plot(duração, \n     type = \"l\", \n     col = \"red\", \n     lty = 1, \n     lwd = 2,\n     main = \"Gráfico de Linhas da Duração dos Eventos\",\n     xlab = \"Número do Evento\", \n     ylab = \"Duração (minutos)\")"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#gráfico-de-pizza",
    "href": "j3.5_GRAFICOS.html#gráfico-de-pizza",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "pie(table(duração), \n    main = \"Gráfico de Pizza da Duração dos Eventos\")"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#gráfico-de-área",
    "href": "j3.5_GRAFICOS.html#gráfico-de-área",
    "title": "Estatística Descritiva",
    "section": "",
    "text": "plot(density(duração), main = \"Gráfico de Área da Duração dos Eventos\",\n     xlab = \"Duração (minutos)\", ylab = \"Densidade\", col = \"blue\", lwd = 2)"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#gráfico-de-pizza-1",
    "href": "j3.5_GRAFICOS.html#gráfico-de-pizza-1",
    "title": "Estatística Descritiva",
    "section": "Gráfico de pizza",
    "text": "Gráfico de pizza\n\npie(table(especialista),\n    main = \"Distribuição dos Especialistas\",\n    col = c(\"lightblue\", \"lightgreen\"),\n    labels = c(\"Não-Especialista\", \"Especialista\"))"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#gráfico-de-barras-da-média-da-duração-por-categoria-de-especialista",
    "href": "j3.5_GRAFICOS.html#gráfico-de-barras-da-média-da-duração-por-categoria-de-especialista",
    "title": "Estatística Descritiva",
    "section": "Gráfico de barras da média da duração por categoria de especialista",
    "text": "Gráfico de barras da média da duração por categoria de especialista\n\nbarplot(tapply(duração, especialista, mean), \n        main = \"Média da Duração por Categoria de Especialista\",\n        xlab = \"Categoria de Especialista\", ylab = \"Média da Duração\",\n        col = c(\"lightblue\", \"lightgreen\"))"
  },
  {
    "objectID": "j3.5_GRAFICOS.html#boxplot-da-duração-por-categoria-de-especialista",
    "href": "j3.5_GRAFICOS.html#boxplot-da-duração-por-categoria-de-especialista",
    "title": "Estatística Descritiva",
    "section": "Boxplot da duração por categoria de especialista",
    "text": "Boxplot da duração por categoria de especialista\n\nboxplot(duração ~ especialista, \n        main = \"Distribuição da Duração por Categoria de Especialista\",\n        xlab = \"Categoria de Especialista\", ylab = \"Duração\",\n        col = c(\"lightblue\", \"lightgreen\"))"
  },
  {
    "objectID": "z_Maria.html",
    "href": "z_Maria.html",
    "title": "A base de dados em R",
    "section": "",
    "text": "load(\"~/Dropbox/_R-SCool/_RSCool.B_Website/RSCool_a_web_24/web_RSCool _Aveiro_1/z_Averiro_bases/z_MariaParticipacaoPublica.Rdata\")\n\nPP &lt;- ParticipacaoPublica"
  },
  {
    "objectID": "z_Maria.html#atribuir-categorias-às-iniciais-apresentadas-na-base-de-dados",
    "href": "z_Maria.html#atribuir-categorias-às-iniciais-apresentadas-na-base-de-dados",
    "title": "A base de dados em R",
    "section": "atribuir categorias às iniciais apresentadas na Base de Dados",
    "text": "atribuir categorias às iniciais apresentadas na Base de Dados\n\nPP$Tipo_P &lt;- factor(PP$Tipo_Participacao,\n          levels = c(\"A\",\"EI\",\"EO\",\"EO/A\",\"EP\",\"F\",\"I\",\"P\",\"R\"), \n          labels = c(\"Associacao\",\"Empresa Imobiliaria\",\"Empresa Outras\",\"Empresa\",\"Empresa Publica\",\"Junta de Freguesia\",\"Individual\",\"Partido Político\",\"Grupo Religioso\"))\n\n\ntipo &lt;- table(PP$Tipo_P)\ntipo\n\n\n         Associacao Empresa Imobiliaria      Empresa Outras             Empresa \n                 25                  35                   9                   1 \n    Empresa Publica  Junta de Freguesia          Individual    Partido Político \n                  3                   1                 232                   5 \n    Grupo Religioso \n                  7 \n\n\n\nmostrar em gráfico o número de participações por tipologia de participante\n\nplot(tipo)\n\n\n\n\n\n\nquem participa em questões de sustentabilidade (zonas verdes e mobilidade urbana)\n\nverde &lt;- as.data.frame(table(PP$Tipo_P,PP$Zonas_verdes))\ncolnames(verde)[which(names(verde) == \"Freq\")] &lt;- \"ZonasVerdes\"\nmobilidade &lt;- as.data.frame(table(PP$Tipo_P,PP$Mobilidade_urbana))\nverde$mobilidade &lt;- mobilidade$Freq\nverde$Var2 &lt;- NULL\n\n###retirar duas linha da tabela (Empresas)\n\nverde &lt;- verde [-c(3,4),]\nverde\n\n                 Var1 ZonasVerdes mobilidade\n1          Associacao           7          5\n2 Empresa Imobiliaria           1          1\n5     Empresa Publica           1          0\n6  Junta de Freguesia           1          0\n7          Individual          47         20\n8    Partido Político           5          3\n9     Grupo Religioso           2          0\n\n\n\n\nver gráfico\n\nlibrary(reshape2)\nlibrary(ggplot2)\ndfm &lt;- melt(verde[,c('Var1','ZonasVerdes','mobilidade')],id.vars = 1)\n\nggplot(dfm,aes(x = Var1,y = value)) + \n    geom_bar(aes(fill = variable),stat = \"identity\",position = \"dodge\") + \n    scale_y_log10()\n\nWarning: Transformation introduced infinite values in continuous y-axis\n\n\n\n\n\nTAKE HOME MESSAGE:\nSão as Participações invididuais e das Associações da Sociedade Civil que participam mais em temas associados a questóes de sustentabilidade como as Zonas Verdes e a Mobilidade Urbana"
  },
  {
    "objectID": "z_Jorge_d_script_analise.html",
    "href": "z_Jorge_d_script_analise.html",
    "title": "Análise Dados Artigos",
    "section": "",
    "text": "Resumo\nO presente trabalho analisa os artigos científicos publicados nas revistas académicas portuguesas da área do turismo entre 2004 e 2019. Através de uma abordagem bibliométrica descritiva, examinam-se as caraterísticas de cada título, a sua evolução e o respetivo perfil autoral. Os resultados obtidos indiciam a existência de projetos editoriais relativamente distintos e o predomínio das proximidades linguística e geográfica em termos de representação nacional.\nPalavra-chave Turismo, Investigação, Revista científica, Portugal\n\n\n1 Introdução\nVocacionadas primordialmente para a produção, disseminação e intercâmbio de resultados de investigação teórica e aplicada - convencionalmente sustentadas num rigoroso processo anónimo de aferição prévia da qualidade - as revistas científicas (journals) desempenham um papel crucial no progresso cumulativo da Ciência. Da sua análise é possível conhecer e compreender caraterísticas, extensão (incluindo lacunas) e progressão aos níveis: i) individual de cada revista (meso); ii) da disciplina ou campo de estudos como um todo (meta); ou ainda iii) a uma escala micro, dos autores e respetivas organizações de filiação (Hall, 2005). Neste sentido, a sua evolução reflete o desenvolvimento de toda uma comunidade académica (Strandberg, Nath, Hemmatdar, & Jahwash, 2018).\nConcomitantemente com o crescimento praticamente incessante do turismo (e subsequente saliência económica), nas últimas décadas assistiu-se à expansão da formação especializada (vocacional ou de grau superior) nesta área e ao desenvolvimento de um campo de estudos e investigação dedicado (Jogaratnam, Chon, McCleary, Mena, & Yoo, 2005). A par de numerosos eventos e organizações especializados, a proliferação da publicação académica, nomeadamente a periódica, testemunha-o: de apenas cinco títulos em 1980, em 1999 somava já 50 (Weiler, 2001), ascendendo a 240 em 2014 (Hunt, Gao, & Xue, 2014); estimativas mais recentes apontam para cerca de 390 títulos ativos em todo o mundo no domínio conjunto do turismo, hospitalidade e eventos (McKercher, 2020). Uma tal vitalidade - reconhece Butler (2015) - constitui um desafio à capacidade dos investigadores acompanharem a pesquisa mais recente, a que acresce uma crónica subrepresentação daqueles títulos nos serviços de indexação bibliográfica académica (McKercher, 2008), apenas remediada com estudos endógenos parcelares.\nEm Portugal, a publicação de revistas académicas sobre turismo iniciou-se em 2004, contando presentemente com quatro títulos. Contudo, passados 16 anos estes periódicos permanecem maioritariamente por analisar quanto às suas caraterísticas, evolução e produtividade - lacuna que o presente estudo visa colmatar.\nNeste sentido, o presente trabalho prossegue com um enquadramento à publicação periódica na área do turismo (secção 2), sumariando as principais análises anteriores. A secção seguinte (3) descreve o desenho e a realização do estudo empírico, continuando com a apresentação dos resultados obtidos (secção 4). Por fim, na secção 5 reflete-se sobre aqueles resultados e perspetivam-se as respetivas limitações, antecipando-se igualmente possíveis direções futuras para o desenvolvimento de estudos deste género. # Metodologia # Resultados\n\n\n[1] \"Artigos_Turismo\" \"has_annotations\"\n\n\n\n1.0.1 Caraterização dos dado analisados\nA partir do ficheiro-fonte dados analisaram-se 18 variáveis com a seguinte caraterização:\n\n\n  #ID_Artigo        Validade         Revista              Ano           \n Length:1391        Mode:logical   Length:1391        Length:1391       \n Class :character   TRUE:1391      Class :character   Class :character  \n Mode  :character                  Mode  :character   Mode  :character  \n                                                                        \n                                                                        \n                                                                        \n                                                                        \n      Vol              Nº               Vol+#           #Especial      \n Min.   : 1.000   Length:1391        Length:1391        Mode :logical  \n 1st Qu.: 1.000   Class :character   Class :character   FALSE:778      \n Median : 3.000   Mode  :character   Mode  :character   TRUE :613      \n Mean   : 4.603                                                        \n 3rd Qu.: 7.000                                                        \n Max.   :15.000                                                        \n NA's   :292                                                           \n      pp_I             pp_F           Título            Keywords        \n Min.   :   1.0   Min.   :   8.0   Length:1391        Length:1391       \n 1st Qu.:  50.0   1st Qu.:  63.0   Class :character   Class :character  \n Median : 111.0   Median : 126.0   Mode  :character   Mode  :character  \n Mean   : 342.5   Mean   : 355.6                                        \n 3rd Qu.: 363.0   3rd Qu.: 374.0                                        \n Max.   :2345.0   Max.   :2352.0                                        \n                                                                        \n    Idioma               pp's            #autores      Colaboração       \n Length:1391        Min.   :   3.00   Min.   : 1.000   Length:1391       \n Class :character   1st Qu.:  10.00   1st Qu.: 2.000   Class :character  \n Mode  :character   Median :  12.00   Median : 2.000   Mode  :character  \n                    Mean   :  14.08   Mean   : 2.339                     \n                    3rd Qu.:  15.00   3rd Qu.: 3.000                     \n                    Max.   :1007.00   Max.   :18.000                     \n                                                                         \n    Âmbito          Participação      \n Length:1391        Length:1391       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n                                      \n\n\n\n\n\n\n\n\n\n\nInterorganizacional Intraorganizacional           Monoautor \n                503                 549                 331 \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2 Conclusão\nA principal contribuição do presente trabalho decorre da análise conjunta da publicação das revistas científicas periódicas portuguesas sobre turismo, estendendo a pesquisa similar existente (atrás mencionada) além dos habituais títulos internacionais mais influuentes e num contexto não-anglófono. Pese embora a sua reduzida expressão, o aparecimento daquelas revistas representou não só um acréscimo do potencial de publicação Portuguesa na área (até então restringida à publicação noutros domínios disciplinares ou em publicações estrangeiras), mas também um marco no desenvolvimento da investigação e ensino neste subdomínio do conhecimento.\nOs resultados agora obtidos permitem tecer comparações quer com as referências aludidas no enquadramento, quer entre os títulos analisados. Por um lado, as prevalências da autoria académica, dos artigos multiautorados e das contribuições isoladas reafirmam os resultados dos estudos internacionais mencionados, ao mesmo tempo que evidenciam a polarização da produção num conjunto restrito de nacionalidades, organizações (académicas) e, em menor grau, dos autores mais prolíficos. As disparidades entre os títulos, por seu turno, manifestam-se a múltiplos níveis: enquanto a RT&D é o título que contabiliza mais artigos publicados, mais organizações representadas, um maior número de autores (nomeadamente, dos filiados em organizações portuguesas) e onde a colaboração interinstitucional (em particular, internacional) é mais expressiva, o EJTH&R é o que publica a maior proporção de artigos monoautorados, de artigos autorados por indivíduos filiados em organizações de outras nacionalidades (i.e., não portuguesas, brasileiras ou espanholas) e onde estão representadas mais nacionalidades, sendo igualmente o único a publicar exclusivamente em inglês. Complementarmente, T&HIJ e na T&MS denotam um maior protagonismo de textos em espanhol, verificando-se um decréscimo global do portugu ês face ao inglês.\nPese embora a maior expressão da autoria filiada em organizações portuguesas no total de artigos ou de autores, não se reconhece aí qualquer hegemonia, atendendo à representação das organizações brasileiras, por exemplo. Não obstante, a concentração da produtividade em apenas três nacionalidades mais representadas - correspondendo a cerca de quatro quintos dos artigos e autores, e mais de metade das organizações - sugere um efeito de proximidade a dois níveis distintos: uma proximidade linguística no que ser refere aos autores ‘brasileiros’ e outra geográfica, relativamente aos ‘espanhóis’. Complementarmente, o perfil colaborativo aponta para uma maior prevalência da colaboração interorganizacional entre ‘brasileiros’, intraorganizacional para ‘espanhóis’ ou monoautorada para os restantes países, sendo os ‘portugueses’ os menos internacionais. O exame de ambas as situações, contudo, reside além do âmbito do presente estudo.\nCom base nos resultados apresentados, afigura-se legítimo refletir sobre a viabilidade dos quatro projetos editoriais num contexto académico como o português: a aparente interrupção (ainda que momentânea) da publicação dos dois títulos mais recentes - coincidentemente aqueles sedeados em instituições de ensino politécnico e com uma orientação mais focalizada na hospitalidade - assim o justifica. Entre outras, as possibilidades podem contemplar a reorientação do posicionamento editorial (agregando uma nova disposição disciplinar, temática ou até geográfica), a fusão de títulos ou o estabelecimento de parcerias (nacionais ou internacionais) com instituições que assegurem a sua viabilidade.\nUma pesquisa como a presente não é, naturalmente, isenta de limitações: circunscrevendo-se às publicações indicadas, os seus resultados não deverão ser tomados como representativos da produtividade quer de indivíduos, quer de instituições, nomeadamente aqueles portugueses. Desde logo porque a atividade de investigação e publicação sobre turismo não se limita ao país, nem sequer à publicação periódica ou aquela explicitamente dedicada ao turismo. Por outro lado, porque englobam também a contribuição de autores não-nacionais radicados ou que temporariamente desenvolveram a sua atividade (e.g., estudos pós-graduados) no país. Quanto ao pendor marcadamente descritivo e não-teorizante do estudo, ele deriva do seu propósito fundacional, centrado no levantamento e análise das características globais da publicação considerada, a ser colmatado em estudos subsequentes.\nProcurando ser um ponto de partida, antevê- se a possibilidade de complementação do presente trabalho com estudos comparativos das realidades espanhola e brasileira, na lógica de proximidade aludida anteriormente. Por outro lado, o seu aprofundamento poderá passar pelo exame do seu impacto (ex. citações), dos temas e caraterísticas bibliométricas (ex. palavras-chave), metodologias ou estruturas sociais inerentes. Ainda assim, um retrato mais completo da investigação portuguesa sobre turismo necessitará de examinar não só outras modalidades da publicação científica na área (publicação de livros; autoria em títulos estrangeiros ou não específicos sobre turismo; editoração; etc.) como outras vertentes de produção científica (graus e teses académicos; unidades de investigação; projetos; consultadoria; financiamento científico; eventos académicos; etc.).\n\nAgradecimentos\nAgradece-se à Dr.ª Ilda Lopes (Escola Superior de Turismo e Tecnologia do Mar, Instituto Politécnico de Leiria) todo o apoio prestado na obtenção da informação bibliográfica de artigos do EJTH&R.\n\n\n\nReferências\n\nBallantyne, R., Packer, J., & Axelsen, M. (2009). Trends in tourism research. Annals of Tourism Research, 36(1), 149-152.\nBenckendorff, P. (2009). Themes and Trends in Australian and New Zealand Tourism Research: A Social Network Analysis of Citations in Two Leading Journals (1994-2007). Journal of Hospitality and Tourism Management, 16(1), 1-15."
  },
  {
    "objectID": "j3.4_tidyverse.html",
    "href": "j3.4_tidyverse.html",
    "title": "TIDYVERSE",
    "section": "",
    "text": "library(dplyr)\n\nMine 2024_ cpa TRANSFORM\n\n# install.packages(\"nycflights13\")\nlibrary(nycflights13)\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n✔ ggplot2 3.3.5     ✔ purrr   0.3.4\n✔ tibble  3.1.6     ✔ stringr 1.4.0\n✔ tidyr   1.2.0     ✔ forcats 0.5.1\n✔ readr   2.1.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\n\n\n\n\n\n\n\n\nall flights that departed more than 120 minutes (two hours) late:\n\n\nflights |&gt; \n  filter(dep_delay &gt; 120)\n\n\nFlights that departed on January 1\n\n\nflights |&gt; \n  filter(month == 1 & day == 1)\n\n\nFlights that departed in January or February\n\n\nflights |&gt; \n  filter(month == 1 | month == 2)\n\n\n\n\nA shorter way to select flights that departed in January or February\n\n\nflights |&gt; \n  filter(month %in% c(1, 2))\n\n\n\n\n\n\norder of the rows based on the value of the columns.\n\nflights |&gt; \n  arrange(year, month, day, dep_time)\n\n\n\n\nflights |&gt; \n  arrange(desc(dep_delay))\n\n\n\n\n\n\nRemove duplicate rows, if any\n\nflights |&gt;  \n  distinct()\n\nFind all unique origin and destination pairs\n\nflights |&gt; \n  distinct(origin, dest)\n\n\nto the keep other columns when filtering for unique rows, use the .keep_all = TRUE option.\n\n\nflights |&gt; \n  distinct(origin, dest, .keep_all = TRUE)\n\n\n\nTo find the number of occurrences instead, you’re better off swapping distinct() for count(), and with the sort = TRUE argument you can arrange them in descending order of number of occurrences.\n\n\nflights |&gt;\n  count(origin, dest, sort = TRUE)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nflights |&gt; \n  mutate(\n    gain = dep_delay - arr_delay,\n    speed = distance / air_time * 60\n  )\n\nBy default, mutate() adds new columns on the right hand side of your dataset,\n\n.before argument to add the variables to the left hand side:\n\n\nflights |&gt; \n  mutate(\n    gain = dep_delay - arr_delay,\n    speed = distance / air_time * 60,\n    .before = 1                           # 1 is the position\n  )\n\n\nuse the variable name instead of a position in both .before and .after\n\n\nflights |&gt; \n  mutate(\n    gain = dep_delay - arr_delay,\n    speed = distance / air_time * 60,\n    .after = day                       # variable name instead of position\n  )\n\n\n\nused specifies that we only keep the columns that were involved or created in the mutate() step.\n\nflights |&gt; \n  mutate(\n    gain = dep_delay - arr_delay,\n    hours = air_time / 60,\n    gain_per_hour = gain / hours,\n    .keep = \"used\"\n  )\n\n\n\n\n\n\n\nSelect columns by name:\n\n\nflights |&gt; \n  select(year, month, day)\n\n\nSelect all columns between year and day (inclusive):\n\n\nflights |&gt; \n  select(year:day)\n\n\nSelect all columns except those from year to day (inclusive):\n\n\nflights |&gt; \n  select(!year:day)\n\n\nSelect all columns that are characters:\n\n\nflights |&gt; \n  select(where(is.character))\n\nThere are a number of helper functions you can use within select(): - starts_with(“abc”) : matches names that begin with “abc”.\n- ends_with(“xyz”) : matches names that end with “xyz”.\n- contains(“ijk”) : matches names that contain “ijk”.\n- num_range(“x”, 1:3) : matches x1, x2 and x3.\n\n\nrename variables as you select() them by using =. The new name appears on the left hand side of the =, the old variable appears on the right hand side:\n\n\nflights |&gt; \n  select(tail_num = tailnum)\n\n\n\n\n\n\nto keep all the existing variables and just want to rename a few, you can use rename() instead of select():\n\n\nflights |&gt; \n  rename(tail_num = tailnum)\n\n\nIf you have a bunch of inconsistently named columns and it would be painful to fix them all by hand, check out janitor::clean_names() which provides some useful automated cleaning.\n\n\n\n\n\n\nto move variables around. You might want to collect related variables together or move important variables to the front.\n\nBy default relocate() moves variables to the front:\n\n\nflights |&gt; \n  relocate(time_hour, air_time)\n\n_ To specify where to put them use the .before and .after arguments, just like in mutate():\n\nflights |&gt; \n  relocate(year:dep_time, .after = time_hour)\n\n\nflights |&gt; \n  relocate(starts_with(\"arr\"), .before = dep_time)\n\n\n\n\n\n\n\n\n\n\n\n\n\nits real power arises when you start to combine multiple verbs.\n\nyou wanted to find the fast flights to Houston’s IAH airport: you need to combine filter(), mutate(), select(), and arrange():\n\n\nflights |&gt; \n  filter(dest == \"IAH\") |&gt; \n  mutate(speed = distance / air_time * 60) |&gt; \n  select(year:day, dep_time, carrier, flight, speed) |&gt; \n  arrange(desc(speed))\n\nEven though this pipeline has four steps, it’s easy to skim because the verbs come at the start of each line: start with the flights data, then filter, then mutate, then select, then arrange.\nWhat would happen if we didn’t have the pipe? We could nest each function call inside the previous call:\n\narrange(\n  select(\n    mutate(\n      filter(\n        flights, \n        dest == \"IAH\"\n      ),\n      speed = distance / air_time * 60\n    ),\n    year:day, dep_time, carrier, flight, speed\n  ),\n  desc(speed)\n)\n\nOr we could use a bunch of intermediate objects:\n\nflights1 &lt;- filter(flights, dest == \"IAH\")\nflights2 &lt;- mutate(flights1, speed = distance / air_time * 60)\nflights3 &lt;- select(flights2, year:day, dep_time, carrier, flight, speed)\narrange(flights3, desc(speed))\n\nWhile both forms have their time and place, the pipe generally produces data analysis code that is easier to write and read.\n\nTo add the pipe to your code:\nuse the built-in keyboard shortcut Ctrl/Cmd + Shift + M\nYou’ll need to make one change to your RStudio options to use |&gt; instead of %&gt;%:\n(the “Use native pipe operator” option which can be found on the “Editing” panel of the “Code” options. Figure 3.1)\n\nFor simple cases, |&gt; and %&gt;% behave identically. So why do we recommend the base pipe? - Firstly, because it’s part of base R, it’s always available for you to use, even when you’re not using the tidyverse. - Secondly, |&gt; is quite a bit simpler than %&gt;%: in the time between the invention of %&gt;% in 2014 and the inclusion of |&gt; in R 4.1.0 in 2021, we gained a better understanding of the pipe. This allowed the base implementation to jettison infrequently used and less important features.\n\n\n\n\n\n\n\n\n\n\nto divide your dataset into groups meaningful for your analysis:\n\n\nflights |&gt; \n  group_by(month)\n\ndoesn’t change the data but, it is “grouped by” month (Groups: month [12]).\n\n\n\n\nThe most important grouped operation, if being used to calculate a single summary statistic, reduces the data frame to have a single row for each group. In dplyr, this operation is performed by summarize(), as shown by the following example, which computes the average departure delay by month:\n\nflights |&gt; \n  group_by(month) |&gt; \n  summarize(\n    avg_delay = mean(dep_delay)\n  )\n\nerror!\n\nflights |&gt; \n  group_by(month) |&gt; \n  summarize(\n    avg_delay = mean(dep_delay, na.rm = TRUE)\n  )\n\n\n\nreturns the number of rows in each group:\n\nflights |&gt; \n  group_by(month) |&gt; \n  summarize(\n    avg_delay = mean(dep_delay, na.rm = TRUE), \n    n = n()\n  )\n\nMeans and counts can get you a surprisingly long way in data science!\n\n\n\n\n\n\nThere are five handy functions that allow you extract specific rows within each group:\ndf |&gt; slice_head(n = 1) takes the first row from each group. df |&gt; slice_tail(n = 1) takes the last row in each group. df |&gt; slice_min(x, n = 1) takes the row with the smallest value of column x. df |&gt; slice_max(x, n = 1) takes the row with the largest value of column x. df |&gt; slice_sample(n = 1) takes one random row. You can vary n to select more than one row, or instead of n =, you can use prop = 0.1 to select (e.g.) 10% of the rows in each group. - For example, the following code finds the flights that are most delayed upon arrival at each destination:\n\nflights |&gt; \n  group_by(dest) |&gt; \n  slice_max(arr_delay, n = 1) |&gt;\n  relocate(dest)\n\nNote that there are 105 destinations but we get 108 rows here. What’s up? slice_min() and slice_max() keep tied values so n = 1 means give us all rows with the highest value. If you want exactly one row per group you can set with_ties = FALSE.\nThis is similar to computing the max delay with summarize(), but you get the whole corresponding row (or rows if there’s a tie) instead of the single summary statistic.\n\nGrouping by multiple variables\nYou can create groups using more than one variable. For example, we could make a group for each date.\n\ndaily &lt;- flights |&gt;  \n  group_by(year, month, day)\ndaily\n\nWhen you summarize a tibble grouped by more than one variable, each summary peels off the last group. In hindsight, this wasn’t a great way to make this function work, but it’s difficult to change without breaking existing code. To make it obvious what’s happening, dplyr displays a message that tells you how you can change this behavior:\n\ndaily_flights &lt;- daily |&gt; \n  summarize(n = n())\n\nIf you’re happy with this behavior, you can explicitly request it in order to suppress the message:\n\ndaily_flights &lt;- daily |&gt; \n  summarize(\n    n = n(), \n    .groups = \"drop_last\"\n  )\n\nAlternatively, change the default behavior by setting a different value, e.g., “drop” to drop all grouping or “keep” to preserve the same groups.\n\n\n\n\n\nYou might also want to remove grouping from a data frame without using summarize(). You can do this with ungroup().\n\ndaily |&gt; \n  ungroup()\n\nNow let’s see what happens when you summarize an ungrouped data frame.\n\ndaily |&gt; \n  ungroup() |&gt;\n  summarize(\n    avg_delay = mean(dep_delay, na.rm = TRUE), \n    flights = n()\n  )\n\nYou get a single row back because dplyr treats all the rows in an ungrouped data frame as belonging to one group. \n\n\n\ndplyr 1.1.0 includes a new, experimental, syntax for per-operation grouping, the .by argument. group_by() and ungroup() aren’t going away, but you can now also use the .by argument to group within a single operation:\n\nflights |&gt; \n  summarize(\n    delay = mean(dep_delay, na.rm = TRUE), \n    n = n(),\n    .by = month\n  )\n\nOr if you want to group by multiple variables:\n\nflights |&gt; \n  summarize(\n    delay = mean(dep_delay, na.rm = TRUE), \n    n = n(),\n    .by = c(origin, dest)\n  )\n\n.by works with all verbs and has the advantage that you don’t need to use the .groups argument to suppress the grouping message or ungroup() when you’re done.\nWe didn’t focus on this syntax in this chapter because it was very new when we wrote the book. We did want to mention it because we think it has a lot of promise and it’s likely to be quite popular. You can learn more about it in the dplyr 1.1.0 blog post."
  },
  {
    "objectID": "j3.4_tidyverse.html#linhas",
    "href": "j3.4_tidyverse.html#linhas",
    "title": "TIDYVERSE",
    "section": "",
    "text": "all flights that departed more than 120 minutes (two hours) late:\n\n\nflights |&gt; \n  filter(dep_delay &gt; 120)\n\n\nFlights that departed on January 1\n\n\nflights |&gt; \n  filter(month == 1 & day == 1)\n\n\nFlights that departed in January or February\n\n\nflights |&gt; \n  filter(month == 1 | month == 2)\n\n\n\n\nA shorter way to select flights that departed in January or February\n\n\nflights |&gt; \n  filter(month %in% c(1, 2))\n\n\n\n\n\n\norder of the rows based on the value of the columns.\n\nflights |&gt; \n  arrange(year, month, day, dep_time)\n\n\n\n\nflights |&gt; \n  arrange(desc(dep_delay))\n\n\n\n\n\n\nRemove duplicate rows, if any\n\nflights |&gt;  \n  distinct()\n\nFind all unique origin and destination pairs\n\nflights |&gt; \n  distinct(origin, dest)\n\n\nto the keep other columns when filtering for unique rows, use the .keep_all = TRUE option.\n\n\nflights |&gt; \n  distinct(origin, dest, .keep_all = TRUE)\n\n\n\nTo find the number of occurrences instead, you’re better off swapping distinct() for count(), and with the sort = TRUE argument you can arrange them in descending order of number of occurrences.\n\n\nflights |&gt;\n  count(origin, dest, sort = TRUE)"
  },
  {
    "objectID": "j3.4_tidyverse.html#colunas",
    "href": "j3.4_tidyverse.html#colunas",
    "title": "TIDYVERSE",
    "section": "",
    "text": "flights |&gt; \n  mutate(\n    gain = dep_delay - arr_delay,\n    speed = distance / air_time * 60\n  )\n\nBy default, mutate() adds new columns on the right hand side of your dataset,\n\n.before argument to add the variables to the left hand side:\n\n\nflights |&gt; \n  mutate(\n    gain = dep_delay - arr_delay,\n    speed = distance / air_time * 60,\n    .before = 1                           # 1 is the position\n  )\n\n\nuse the variable name instead of a position in both .before and .after\n\n\nflights |&gt; \n  mutate(\n    gain = dep_delay - arr_delay,\n    speed = distance / air_time * 60,\n    .after = day                       # variable name instead of position\n  )\n\n\n\nused specifies that we only keep the columns that were involved or created in the mutate() step.\n\nflights |&gt; \n  mutate(\n    gain = dep_delay - arr_delay,\n    hours = air_time / 60,\n    gain_per_hour = gain / hours,\n    .keep = \"used\"\n  )\n\n\n\n\n\n\n\nSelect columns by name:\n\n\nflights |&gt; \n  select(year, month, day)\n\n\nSelect all columns between year and day (inclusive):\n\n\nflights |&gt; \n  select(year:day)\n\n\nSelect all columns except those from year to day (inclusive):\n\n\nflights |&gt; \n  select(!year:day)\n\n\nSelect all columns that are characters:\n\n\nflights |&gt; \n  select(where(is.character))\n\nThere are a number of helper functions you can use within select(): - starts_with(“abc”) : matches names that begin with “abc”.\n- ends_with(“xyz”) : matches names that end with “xyz”.\n- contains(“ijk”) : matches names that contain “ijk”.\n- num_range(“x”, 1:3) : matches x1, x2 and x3.\n\n\nrename variables as you select() them by using =. The new name appears on the left hand side of the =, the old variable appears on the right hand side:\n\n\nflights |&gt; \n  select(tail_num = tailnum)\n\n\n\n\n\n\nto keep all the existing variables and just want to rename a few, you can use rename() instead of select():\n\n\nflights |&gt; \n  rename(tail_num = tailnum)\n\n\nIf you have a bunch of inconsistently named columns and it would be painful to fix them all by hand, check out janitor::clean_names() which provides some useful automated cleaning.\n\n\n\n\n\n\nto move variables around. You might want to collect related variables together or move important variables to the front.\n\nBy default relocate() moves variables to the front:\n\n\nflights |&gt; \n  relocate(time_hour, air_time)\n\n_ To specify where to put them use the .before and .after arguments, just like in mutate():\n\nflights |&gt; \n  relocate(year:dep_time, .after = time_hour)\n\n\nflights |&gt; \n  relocate(starts_with(\"arr\"), .before = dep_time)"
  },
  {
    "objectID": "j3.4_tidyverse.html#the-pipe",
    "href": "j3.4_tidyverse.html#the-pipe",
    "title": "TIDYVERSE",
    "section": "",
    "text": "its real power arises when you start to combine multiple verbs.\n\nyou wanted to find the fast flights to Houston’s IAH airport: you need to combine filter(), mutate(), select(), and arrange():\n\n\nflights |&gt; \n  filter(dest == \"IAH\") |&gt; \n  mutate(speed = distance / air_time * 60) |&gt; \n  select(year:day, dep_time, carrier, flight, speed) |&gt; \n  arrange(desc(speed))\n\nEven though this pipeline has four steps, it’s easy to skim because the verbs come at the start of each line: start with the flights data, then filter, then mutate, then select, then arrange.\nWhat would happen if we didn’t have the pipe? We could nest each function call inside the previous call:\n\narrange(\n  select(\n    mutate(\n      filter(\n        flights, \n        dest == \"IAH\"\n      ),\n      speed = distance / air_time * 60\n    ),\n    year:day, dep_time, carrier, flight, speed\n  ),\n  desc(speed)\n)\n\nOr we could use a bunch of intermediate objects:\n\nflights1 &lt;- filter(flights, dest == \"IAH\")\nflights2 &lt;- mutate(flights1, speed = distance / air_time * 60)\nflights3 &lt;- select(flights2, year:day, dep_time, carrier, flight, speed)\narrange(flights3, desc(speed))\n\nWhile both forms have their time and place, the pipe generally produces data analysis code that is easier to write and read.\n\nTo add the pipe to your code:\nuse the built-in keyboard shortcut Ctrl/Cmd + Shift + M\nYou’ll need to make one change to your RStudio options to use |&gt; instead of %&gt;%:\n(the “Use native pipe operator” option which can be found on the “Editing” panel of the “Code” options. Figure 3.1)\n\nFor simple cases, |&gt; and %&gt;% behave identically. So why do we recommend the base pipe? - Firstly, because it’s part of base R, it’s always available for you to use, even when you’re not using the tidyverse. - Secondly, |&gt; is quite a bit simpler than %&gt;%: in the time between the invention of %&gt;% in 2014 and the inclusion of |&gt; in R 4.1.0 in 2021, we gained a better understanding of the pipe. This allowed the base implementation to jettison infrequently used and less important features."
  },
  {
    "objectID": "j3.4_tidyverse.html#groups",
    "href": "j3.4_tidyverse.html#groups",
    "title": "TIDYVERSE",
    "section": "",
    "text": "to divide your dataset into groups meaningful for your analysis:\n\n\nflights |&gt; \n  group_by(month)\n\ndoesn’t change the data but, it is “grouped by” month (Groups: month [12]).\n\n\n\n\nThe most important grouped operation, if being used to calculate a single summary statistic, reduces the data frame to have a single row for each group. In dplyr, this operation is performed by summarize(), as shown by the following example, which computes the average departure delay by month:\n\nflights |&gt; \n  group_by(month) |&gt; \n  summarize(\n    avg_delay = mean(dep_delay)\n  )\n\nerror!\n\nflights |&gt; \n  group_by(month) |&gt; \n  summarize(\n    avg_delay = mean(dep_delay, na.rm = TRUE)\n  )\n\n\n\nreturns the number of rows in each group:\n\nflights |&gt; \n  group_by(month) |&gt; \n  summarize(\n    avg_delay = mean(dep_delay, na.rm = TRUE), \n    n = n()\n  )\n\nMeans and counts can get you a surprisingly long way in data science!\n\n\n\n\n\n\nThere are five handy functions that allow you extract specific rows within each group:\ndf |&gt; slice_head(n = 1) takes the first row from each group. df |&gt; slice_tail(n = 1) takes the last row in each group. df |&gt; slice_min(x, n = 1) takes the row with the smallest value of column x. df |&gt; slice_max(x, n = 1) takes the row with the largest value of column x. df |&gt; slice_sample(n = 1) takes one random row. You can vary n to select more than one row, or instead of n =, you can use prop = 0.1 to select (e.g.) 10% of the rows in each group. - For example, the following code finds the flights that are most delayed upon arrival at each destination:\n\nflights |&gt; \n  group_by(dest) |&gt; \n  slice_max(arr_delay, n = 1) |&gt;\n  relocate(dest)\n\nNote that there are 105 destinations but we get 108 rows here. What’s up? slice_min() and slice_max() keep tied values so n = 1 means give us all rows with the highest value. If you want exactly one row per group you can set with_ties = FALSE.\nThis is similar to computing the max delay with summarize(), but you get the whole corresponding row (or rows if there’s a tie) instead of the single summary statistic.\n\nGrouping by multiple variables\nYou can create groups using more than one variable. For example, we could make a group for each date.\n\ndaily &lt;- flights |&gt;  \n  group_by(year, month, day)\ndaily\n\nWhen you summarize a tibble grouped by more than one variable, each summary peels off the last group. In hindsight, this wasn’t a great way to make this function work, but it’s difficult to change without breaking existing code. To make it obvious what’s happening, dplyr displays a message that tells you how you can change this behavior:\n\ndaily_flights &lt;- daily |&gt; \n  summarize(n = n())\n\nIf you’re happy with this behavior, you can explicitly request it in order to suppress the message:\n\ndaily_flights &lt;- daily |&gt; \n  summarize(\n    n = n(), \n    .groups = \"drop_last\"\n  )\n\nAlternatively, change the default behavior by setting a different value, e.g., “drop” to drop all grouping or “keep” to preserve the same groups.\n\n\n\n\n\nYou might also want to remove grouping from a data frame without using summarize(). You can do this with ungroup().\n\ndaily |&gt; \n  ungroup()\n\nNow let’s see what happens when you summarize an ungrouped data frame.\n\ndaily |&gt; \n  ungroup() |&gt;\n  summarize(\n    avg_delay = mean(dep_delay, na.rm = TRUE), \n    flights = n()\n  )\n\nYou get a single row back because dplyr treats all the rows in an ungrouped data frame as belonging to one group. \n\n\n\ndplyr 1.1.0 includes a new, experimental, syntax for per-operation grouping, the .by argument. group_by() and ungroup() aren’t going away, but you can now also use the .by argument to group within a single operation:\n\nflights |&gt; \n  summarize(\n    delay = mean(dep_delay, na.rm = TRUE), \n    n = n(),\n    .by = month\n  )\n\nOr if you want to group by multiple variables:\n\nflights |&gt; \n  summarize(\n    delay = mean(dep_delay, na.rm = TRUE), \n    n = n(),\n    .by = c(origin, dest)\n  )\n\n.by works with all verbs and has the advantage that you don’t need to use the .groups argument to suppress the grouping message or ungroup() when you’re done.\nWe didn’t focus on this syntax in this chapter because it was very new when we wrote the book. We did want to mention it because we think it has a lot of promise and it’s likely to be quite popular. You can learn more about it in the dplyr 1.1.0 blog post."
  },
  {
    "objectID": "j3.0.3_boaspraticas.html",
    "href": "j3.0.3_boaspraticas.html",
    "title": "Boas Práticas",
    "section": "",
    "text": "Os dados originais não se mexem\nNunca modificar ou eliminar informação das fontes originais. Simplesmente criar uma ou mais bases de dados de trabalho para realizar à manipulação. R é muito flexível tanto para a criação quanto para o uso simultâneo de várias bases de dados ou subcojuntos delas.\nTodo no script\nEscrever todos os procedimentos e comentarios num script. Usar a consola só para controles rápidos e exploração.\nMuita ‘duplicação’backup’\nDentro da base de dados de trabalho, criar ‘backups’ antes de transformar os dados (variáveis ou objetos). Por exemplo, se quiser recodificar var33, primeiro criar var33backup, depois modifique var33, verifique a versão modificada em relação ao backup e, finalmente, elimine o backup.\n\nCom estas práticas é muito simples controlar e voltar para atrás em cada etapa da manipulação os dados procedimento, lidando facilmente com erros, omissões e melhoras."
  },
  {
    "objectID": "j3.0.3_boaspraticas.html#dicas-para-a-manipulação-de-dados-gestão-análise-programação",
    "href": "j3.0.3_boaspraticas.html#dicas-para-a-manipulação-de-dados-gestão-análise-programação",
    "title": "Boas Práticas",
    "section": "",
    "text": "Os dados originais não se mexem\nNunca modificar ou eliminar informação das fontes originais. Simplesmente criar uma ou mais bases de dados de trabalho para realizar à manipulação. R é muito flexível tanto para a criação quanto para o uso simultâneo de várias bases de dados ou subcojuntos delas.\nTodo no script\nEscrever todos os procedimentos e comentarios num script. Usar a consola só para controles rápidos e exploração.\nMuita ‘duplicação’backup’\nDentro da base de dados de trabalho, criar ‘backups’ antes de transformar os dados (variáveis ou objetos). Por exemplo, se quiser recodificar var33, primeiro criar var33backup, depois modifique var33, verifique a versão modificada em relação ao backup e, finalmente, elimine o backup.\n\nCom estas práticas é muito simples controlar e voltar para atrás em cada etapa da manipulação os dados procedimento, lidando facilmente com erros, omissões e melhoras."
  },
  {
    "objectID": "j3.0.4_resources.html",
    "href": "j3.0.4_resources.html",
    "title": "Recursos",
    "section": "",
    "text": "Recursos\n\nR for Data Science (2023) (melhor livro básico)\n\nSTHDA (ótima fonte.por exemplo: R Built-in Data Sets \nQuick R (para perguntas rápidas) \nGraphics CookbookR (ggplot2) \nQuarto document (script XPTO!)"
  },
  {
    "objectID": "j3.3_vectors.html",
    "href": "j3.3_vectors.html",
    "title": "VECTORS",
    "section": "",
    "text": "class(x)\n\n\ntable(x, exclude= FALSE)\ntable (is.na(x) )\n\n\nsummary(x)\nsum(x)\nmean (x)\nmedian(x)           \n\n\nlength(x)\nsort  (x)\nrev(x)\n\n\nstr(modelo1)  # estrutura do objeto\nattributes(modelo1) # atributos do objeto (não só mostrados no output)  \nmodelo1$Coef # Aceder a atributos específicos\n\n \n\n\n\n\nPerguntar a classe:\n\n\nclass (x)\n\n\n\nTestar a classe:\n\n\nis.numeric(x)\nis.character(x)\nis.factor (x)\nis.vector(x)\nis.matrix(x)\nis.data.frame(x)\n\n\n\nCoercionar a classe:\n\n\nas.numeric()\nas.character()\nas.factor ()\nas.vector()\nas.matrix()\nas.data.frame() \n    \n\nas.data.frame.matrix(mytable)   # Convertir  tabela em dataframe        \n\n\nATENÇÃO quando se ‘coercionam’ factores com categorias numéricas. O resultado pode não ser o esperado….\n\n \n\n\n\n\nDetectar NAs numa variável: \n\n\ntable (is.na(x))\n\n\n\nTabela que não exclua NAs:\n\n\n\ntable (x, exclude = FALSE)\n\n\n\nCalcular média duma variável com NAs: \n\n\nmean(x, na.rm = TRUE)\n\n\n\nEliminar observações com NA numa variável: \n\n\nDf &lt;-subset( Df   ,   !is.na (sexo))  \n\n\n\nEliminar obs com NA em todas as variables da base Df: \n\n\nDf &lt;- na.omit (Df)              \n\n\n\nRecodificar NAs em 0: \n\n\ny[is.na(y)] &lt;- 0              # recodifica “NA” de “y” em “0”\n\n\n\nRecodificar como NA: \n\n\n(D$x[D$x==88] &lt;- NA           # recodifica x==88  em NA\n\n\n\nListar linhas com NAs: \n\n\nDf[!complete.cases(Df),]\n\n\n\nCriar nova base sem NAs: \n\n\nDF_new &lt;- na.omit(DF)\n\nmais sobre NAs\n \n\n\n\n\nFactorizar uma variável numérica: \n\n\ncut (x, breaks=3)\n\n\n\nFactorizar uma variável não factor: \n\n\nv &lt;- c(0, 1, 1, 0, 5,5, 0)\n\nf &lt;- factor (v)\n\n\n\nVisualizar ‘levels’ de uma factor:\n\n\n\nlevels(f) \n\n[1] \"0\" \"1\" \"5\"\n\n\n\n\nAtribuir ‘labels’ a uma factor:\n\n\nf &lt;- factor(f,\n            levels = c(0,1, 5),\n             labels = c(\"azul\", \"verde\", \"cinzento\"))\n\n\n\nRecodificar em 2 categorias:\n\n\nf.2 &lt;- ifelse(f==\"azul\",  \"A\", \"nonA\") \n\n\n\nRecodificar em 3 categorias:\n\n\nage &lt;- c(9, 9, 11, 14, 16, 30, 50)\n\nage.3 &lt;- NA\nage.3  [age &lt; 10]             &lt;- \"child\"\nage.3  [age &gt;= 10 & age &lt; 20] &lt;- \"teenager\"\nage.3  [age &gt;= 20]            &lt;- \"adult\"\n\n\n\nMudar nome de um level\nmais aqui\n\n\nlibrary(plyr)\nf &lt;- revalue(f, c(\"azul\"=\"AZUL\"))\nf\n\n[1] AZUL     verde    verde    AZUL     cinzento cinzento AZUL    \nLevels: AZUL verde cinzento\n\n\n\n\nEspecificar a categoría de referencia:\n\n\nf &lt;- relevel (f, \"verde\")   # ver ordem de \"Levels\"\nf\n\n[1] AZUL     verde    verde    AZUL     cinzento cinzento AZUL    \nLevels: verde AZUL cinzento\n\n\n\n\nAgregar uma categoria: \n\n\nf &lt;- factor(f, levels = c(levels(f), \"BRANCO\"))\nf\n\n\n\nEliminar uma categoria:\n\n\n\nf &lt;- f[f !=\"cinzento\"]         # eliminar obs. da categoria   \nf &lt;- factor (f)                # (se eliminam as categorias sem obs)\nf\n\n[1] AZUL  verde verde AZUL  AZUL \nLevels: verde AZUL\n\n\n\n\nInvertir a ordem dos ‘levels’:\n\n\n\nf_rev  &lt;- factor(f, levels = rev(levels(f)))\nf_rev\n\n\n\nReordenar ‘levels’\n\n\nf &lt;- factor(f, levels = c(\"verde\", \"AZUL\"))\n\n(mais sobre reordenar )\n\n\nReverse order of factor levels\n\n\nlibrary(tidyverse)  \nfct_rev(f)\n\n\n\nReordenar var1 by var2 (exemplo)\n\n\nvar1 &lt;- reorder(var1, var2)\n\nvar1 &lt;- reorder(var1, -var2)  # descending\n\n\n\nOrdenar levels de uma factor baseado na ordem das linhas numa base\nmais info\n\n\n\nlibrary(dplyr)\n\nDf &lt;- mutate(Df, col = factor(col, col))\n\n\n\nlibrary(dplyr)\n\nDf &lt;- data.frame(\n  num = 5:1,\n  word = factor (c(\"five\", \"four\", \"three\", \"two\", \"one\")))\nlevels(Df$word) # levels are alphabetical by default\n\n[1] \"five\"  \"four\"  \"one\"   \"three\" \"two\"  \n\nDf$word # right now the order is 5,4,3,2,1\n\n[1] five  four  three two   one  \nLevels: five four one three two\n\nDf &lt;- Df %&gt;%\n  arrange(num) %&gt;%   # rearrange the Df in the order we want (1,2,3,4,5)\n  mutate(word = factor(word, word)) # this line reorders the factor in the same order\n\nlevels(Df$word) \n\n[1] \"one\"   \"two\"   \"three\" \"four\"  \"five\" \n\n\nMais sobre ordenar uma factor  \n\n\n\n\n\nimportar de excel a STATA:\n\n\n# magic number -20454  (o -21916, segun Cecilia\n# transformar en número, restar 20454, y asignar formato %td\n\n# generate statadate =date-20454\n# generate statadate =date-21916\n\n\n\nTransformar String, com formato: “10/08/84”\n\n\n\nx &lt;- c(\"10/08/84\", \"10/08/84\", \"10/08/84\")\n\n\ndates &lt;- as.Date(x, format= \"%d / %m /%y\")  # en 'format' indicar ordem da variável string\ndates\n\n[1] \"1984-08-10\" \"1984-08-10\" \"1984-08-10\"\n\nclass(dates)\n\n[1] \"Date\"\n\ndates2a &lt;- format(dates, format=\"%d  /%B   / %Y\")\ndates2a\n\n[1] \"10  /August   / 1984\" \"10  /August   / 1984\" \"10  /August   / 1984\"\n\ndates2b &lt;- format(dates, format=\"%d  /%B   / %y\")\ndates2b\n\n[1] \"10  /August   / 84\" \"10  /August   / 84\" \"10  /August   / 84\"\n\ndates2c &lt;- format(dates, format=\"%d  /%b   / %Y\")\ndates2c\n\n[1] \"10  /Aug   / 1984\" \"10  /Aug   / 1984\" \"10  /Aug   / 1984\"\n\n\n\n\nTransformar String, com formato: “10-Aug-79”\n\n\ny &lt;- c(\"10-Aug-79\", \"10-Aug-79\", \"10-Aug-79\")\ny\n\n[1] \"10-Aug-79\" \"10-Aug-79\" \"10-Aug-79\"\n\nd3 &lt;- as.Date (y, format=\"%d - %B - %y\")\nd3\n\n[1] \"1979-08-10\" \"1979-08-10\" \"1979-08-10\"\n\nd3c &lt;- format(d3, format=\"%d  /%B   / %Y\")\nd3c\n\n[1] \"10  /August   / 1979\" \"10  /August   / 1979\" \"10  /August   / 1979\"\n\n\n\nmais sobre string para date\n \n\n\n\n\nx[1:10]                      \nx[is.na(x)]                  \n\nx[!is.na(x)]                 \n \nx[!is.na(x) & x&gt;5]      \n\nx[c(3,5,7)]\n\nx[0]\n\nx[3000]\n\nx[c(-2,-10)]\n\nx[-c(2,10)]\n\n \n\n\n\n\nstrings &lt;- c(\"maçã\", \"banana\", \"laranja\", \"uva\", \"kiwi\")\n\n\nAcessar elementos individualmente\n\nstrings[1]\n\n[1] \"maçã\"\n\n\n\nAcessar vários elementos\n\nstrings[c(2, 4)]\n\n[1] \"banana\" \"uva\"   \n\n\n\nCombinação de Strings:\n\npaste(\"Eu gosto de\", strings[1])\n\n[1] \"Eu gosto de maçã\"\n\n\nAlterar Maiúsculas/Minúsculas:\n\ntoupper(strings)\n\n[1] \"MAÇÃ\"    \"BANANA\"  \"LARANJA\" \"UVA\"     \"KIWI\"   \n\ntolower(strings)\n\n[1] \"maçã\"    \"banana\"  \"laranja\" \"uva\"     \"kiwi\"   \n\n\nExtração de Substrings:\n\nsubstr(strings[1], start = 1, stop = 3)\n\n[1] \"maç\"\n\n\nLength da String:\n\nnchar(strings[1])\n\n[1] 4\n\n\n\nVerificar se uma string contém um padrão específico\n\ncontem_maca &lt;- grepl(\"maçã\", strings)\nprint(contem_maca)\n\n[1]  TRUE FALSE FALSE FALSE FALSE"
  },
  {
    "objectID": "j3.3_vectors.html#exploração-básica",
    "href": "j3.3_vectors.html#exploração-básica",
    "title": "VECTORS",
    "section": "",
    "text": "class(x)\n\n\ntable(x, exclude= FALSE)\ntable (is.na(x) )\n\n\nsummary(x)\nsum(x)\nmean (x)\nmedian(x)           \n\n\nlength(x)\nsort  (x)\nrev(x)\n\n\nstr(modelo1)  # estrutura do objeto\nattributes(modelo1) # atributos do objeto (não só mostrados no output)  \nmodelo1$Coef # Aceder a atributos específicos"
  },
  {
    "objectID": "j3.3_vectors.html#classes-de-objectos",
    "href": "j3.3_vectors.html#classes-de-objectos",
    "title": "VECTORS",
    "section": "",
    "text": "Perguntar a classe:\n\n\nclass (x)\n\n\n\nTestar a classe:\n\n\nis.numeric(x)\nis.character(x)\nis.factor (x)\nis.vector(x)\nis.matrix(x)\nis.data.frame(x)\n\n\n\nCoercionar a classe:\n\n\nas.numeric()\nas.character()\nas.factor ()\nas.vector()\nas.matrix()\nas.data.frame() \n    \n\nas.data.frame.matrix(mytable)   # Convertir  tabela em dataframe        \n\n\nATENÇÃO quando se ‘coercionam’ factores com categorias numéricas. O resultado pode não ser o esperado…."
  },
  {
    "objectID": "j3.3_vectors.html#valores-em-falta",
    "href": "j3.3_vectors.html#valores-em-falta",
    "title": "VECTORS",
    "section": "",
    "text": "Detectar NAs numa variável: \n\n\ntable (is.na(x))\n\n\n\nTabela que não exclua NAs:\n\n\n\ntable (x, exclude = FALSE)\n\n\n\nCalcular média duma variável com NAs: \n\n\nmean(x, na.rm = TRUE)\n\n\n\nEliminar observações com NA numa variável: \n\n\nDf &lt;-subset( Df   ,   !is.na (sexo))  \n\n\n\nEliminar obs com NA em todas as variables da base Df: \n\n\nDf &lt;- na.omit (Df)              \n\n\n\nRecodificar NAs em 0: \n\n\ny[is.na(y)] &lt;- 0              # recodifica “NA” de “y” em “0”\n\n\n\nRecodificar como NA: \n\n\n(D$x[D$x==88] &lt;- NA           # recodifica x==88  em NA\n\n\n\nListar linhas com NAs: \n\n\nDf[!complete.cases(Df),]\n\n\n\nCriar nova base sem NAs: \n\n\nDF_new &lt;- na.omit(DF)\n\nmais sobre NAs"
  },
  {
    "objectID": "j3.3_vectors.html#factors",
    "href": "j3.3_vectors.html#factors",
    "title": "VECTORS",
    "section": "",
    "text": "Factorizar uma variável numérica: \n\n\ncut (x, breaks=3)\n\n\n\nFactorizar uma variável não factor: \n\n\nv &lt;- c(0, 1, 1, 0, 5,5, 0)\n\nf &lt;- factor (v)\n\n\n\nVisualizar ‘levels’ de uma factor:\n\n\n\nlevels(f) \n\n[1] \"0\" \"1\" \"5\"\n\n\n\n\nAtribuir ‘labels’ a uma factor:\n\n\nf &lt;- factor(f,\n            levels = c(0,1, 5),\n             labels = c(\"azul\", \"verde\", \"cinzento\"))\n\n\n\nRecodificar em 2 categorias:\n\n\nf.2 &lt;- ifelse(f==\"azul\",  \"A\", \"nonA\") \n\n\n\nRecodificar em 3 categorias:\n\n\nage &lt;- c(9, 9, 11, 14, 16, 30, 50)\n\nage.3 &lt;- NA\nage.3  [age &lt; 10]             &lt;- \"child\"\nage.3  [age &gt;= 10 & age &lt; 20] &lt;- \"teenager\"\nage.3  [age &gt;= 20]            &lt;- \"adult\"\n\n\n\nMudar nome de um level\nmais aqui\n\n\nlibrary(plyr)\nf &lt;- revalue(f, c(\"azul\"=\"AZUL\"))\nf\n\n[1] AZUL     verde    verde    AZUL     cinzento cinzento AZUL    \nLevels: AZUL verde cinzento\n\n\n\n\nEspecificar a categoría de referencia:\n\n\nf &lt;- relevel (f, \"verde\")   # ver ordem de \"Levels\"\nf\n\n[1] AZUL     verde    verde    AZUL     cinzento cinzento AZUL    \nLevels: verde AZUL cinzento\n\n\n\n\nAgregar uma categoria: \n\n\nf &lt;- factor(f, levels = c(levels(f), \"BRANCO\"))\nf\n\n\n\nEliminar uma categoria:\n\n\n\nf &lt;- f[f !=\"cinzento\"]         # eliminar obs. da categoria   \nf &lt;- factor (f)                # (se eliminam as categorias sem obs)\nf\n\n[1] AZUL  verde verde AZUL  AZUL \nLevels: verde AZUL\n\n\n\n\nInvertir a ordem dos ‘levels’:\n\n\n\nf_rev  &lt;- factor(f, levels = rev(levels(f)))\nf_rev\n\n\n\nReordenar ‘levels’\n\n\nf &lt;- factor(f, levels = c(\"verde\", \"AZUL\"))\n\n(mais sobre reordenar )\n\n\nReverse order of factor levels\n\n\nlibrary(tidyverse)  \nfct_rev(f)\n\n\n\nReordenar var1 by var2 (exemplo)\n\n\nvar1 &lt;- reorder(var1, var2)\n\nvar1 &lt;- reorder(var1, -var2)  # descending\n\n\n\nOrdenar levels de uma factor baseado na ordem das linhas numa base\nmais info\n\n\n\nlibrary(dplyr)\n\nDf &lt;- mutate(Df, col = factor(col, col))\n\n\n\nlibrary(dplyr)\n\nDf &lt;- data.frame(\n  num = 5:1,\n  word = factor (c(\"five\", \"four\", \"three\", \"two\", \"one\")))\nlevels(Df$word) # levels are alphabetical by default\n\n[1] \"five\"  \"four\"  \"one\"   \"three\" \"two\"  \n\nDf$word # right now the order is 5,4,3,2,1\n\n[1] five  four  three two   one  \nLevels: five four one three two\n\nDf &lt;- Df %&gt;%\n  arrange(num) %&gt;%   # rearrange the Df in the order we want (1,2,3,4,5)\n  mutate(word = factor(word, word)) # this line reorders the factor in the same order\n\nlevels(Df$word) \n\n[1] \"one\"   \"two\"   \"three\" \"four\"  \"five\" \n\n\nMais sobre ordenar uma factor"
  },
  {
    "objectID": "j3.3_vectors.html#dates",
    "href": "j3.3_vectors.html#dates",
    "title": "VECTORS",
    "section": "",
    "text": "importar de excel a STATA:\n\n\n# magic number -20454  (o -21916, segun Cecilia\n# transformar en número, restar 20454, y asignar formato %td\n\n# generate statadate =date-20454\n# generate statadate =date-21916\n\n\n\nTransformar String, com formato: “10/08/84”\n\n\n\nx &lt;- c(\"10/08/84\", \"10/08/84\", \"10/08/84\")\n\n\ndates &lt;- as.Date(x, format= \"%d / %m /%y\")  # en 'format' indicar ordem da variável string\ndates\n\n[1] \"1984-08-10\" \"1984-08-10\" \"1984-08-10\"\n\nclass(dates)\n\n[1] \"Date\"\n\ndates2a &lt;- format(dates, format=\"%d  /%B   / %Y\")\ndates2a\n\n[1] \"10  /August   / 1984\" \"10  /August   / 1984\" \"10  /August   / 1984\"\n\ndates2b &lt;- format(dates, format=\"%d  /%B   / %y\")\ndates2b\n\n[1] \"10  /August   / 84\" \"10  /August   / 84\" \"10  /August   / 84\"\n\ndates2c &lt;- format(dates, format=\"%d  /%b   / %Y\")\ndates2c\n\n[1] \"10  /Aug   / 1984\" \"10  /Aug   / 1984\" \"10  /Aug   / 1984\"\n\n\n\n\nTransformar String, com formato: “10-Aug-79”\n\n\ny &lt;- c(\"10-Aug-79\", \"10-Aug-79\", \"10-Aug-79\")\ny\n\n[1] \"10-Aug-79\" \"10-Aug-79\" \"10-Aug-79\"\n\nd3 &lt;- as.Date (y, format=\"%d - %B - %y\")\nd3\n\n[1] \"1979-08-10\" \"1979-08-10\" \"1979-08-10\"\n\nd3c &lt;- format(d3, format=\"%d  /%B   / %Y\")\nd3c\n\n[1] \"10  /August   / 1979\" \"10  /August   / 1979\" \"10  /August   / 1979\"\n\n\n\nmais sobre string para date"
  },
  {
    "objectID": "j3.3_vectors.html#parênteses-retos-subsetting",
    "href": "j3.3_vectors.html#parênteses-retos-subsetting",
    "title": "VECTORS",
    "section": "",
    "text": "x[1:10]                      \nx[is.na(x)]                  \n\nx[!is.na(x)]                 \n \nx[!is.na(x) & x&gt;5]      \n\nx[c(3,5,7)]\n\nx[0]\n\nx[3000]\n\nx[c(-2,-10)]\n\nx[-c(2,10)]"
  },
  {
    "objectID": "j3.3_vectors.html#strings",
    "href": "j3.3_vectors.html#strings",
    "title": "VECTORS",
    "section": "",
    "text": "strings &lt;- c(\"maçã\", \"banana\", \"laranja\", \"uva\", \"kiwi\")\n\n\nAcessar elementos individualmente\n\nstrings[1]\n\n[1] \"maçã\"\n\n\n\nAcessar vários elementos\n\nstrings[c(2, 4)]\n\n[1] \"banana\" \"uva\"   \n\n\n\nCombinação de Strings:\n\npaste(\"Eu gosto de\", strings[1])\n\n[1] \"Eu gosto de maçã\"\n\n\nAlterar Maiúsculas/Minúsculas:\n\ntoupper(strings)\n\n[1] \"MAÇÃ\"    \"BANANA\"  \"LARANJA\" \"UVA\"     \"KIWI\"   \n\ntolower(strings)\n\n[1] \"maçã\"    \"banana\"  \"laranja\" \"uva\"     \"kiwi\"   \n\n\nExtração de Substrings:\n\nsubstr(strings[1], start = 1, stop = 3)\n\n[1] \"maç\"\n\n\nLength da String:\n\nnchar(strings[1])\n\n[1] 4\n\n\n\nVerificar se uma string contém um padrão específico\n\ncontem_maca &lt;- grepl(\"maçã\", strings)\nprint(contem_maca)\n\n[1]  TRUE FALSE FALSE FALSE FALSE"
  },
  {
    "objectID": "z_nuno.html",
    "href": "z_nuno.html",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "",
    "text": "Nuno Calheiros Lobo sad/govcopp DEGEIT University of Aveiro\nABSTRACT\nThis report presents a detailed analysis of the COMTRADE database, focusing on [brief summary of objectives, methods, key findings, and conclusions]."
  },
  {
    "objectID": "z_nuno.html#background",
    "href": "z_nuno.html#background",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "1.1 Background",
    "text": "1.1 Background\nThe COMTRADE is a United Nations comprehensive trade database containing [brief description of database content and purpose]. Understanding the patterns and trends within this database is crucial for [explain the significance of analysis]."
  },
  {
    "objectID": "z_nuno.html#objectives",
    "href": "z_nuno.html#objectives",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "1.2 Objectives",
    "text": "1.2 Objectives\nThe objectives of this analysis are to:\nExplore the characteristics and distribution of the data. Identify key trends, patterns, and relationships within the database. Draw insights and conclusions based on the analysis. # Methodology ## Data Collection The data for this analysis was obtained from [source of the database]. It contains [describe the nature and scope of the data]."
  },
  {
    "objectID": "z_nuno.html#data-preprocessing",
    "href": "z_nuno.html#data-preprocessing",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "1.3 Data Preprocessing",
    "text": "1.3 Data Preprocessing\nPrior to analysis, the data underwent the following preprocessing steps:\nCleaning: Removal of duplicate records and handling missing values. Transformation: Conversion of data types and normalization of variables. Filtering: Selection of relevant subsets of the data based on predefined criteria."
  },
  {
    "objectID": "z_nuno.html#analysis-techniques",
    "href": "z_nuno.html#analysis-techniques",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "1.4 Analysis Techniques",
    "text": "1.4 Analysis Techniques\nThe following analytical techniques were employed in this analysis:\nDescriptive Statistics: Calculation of summary statistics and distributional measures. Data Visualization: Creation of plots, charts, and graphs to visualize the data. [Additional techniques as relevant to the analysis]."
  },
  {
    "objectID": "z_nuno.html#software-and-tools",
    "href": "z_nuno.html#software-and-tools",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "1.5 Software and Tools",
    "text": "1.5 Software and Tools\nThe analysis was conducted using R/Rstudio for data manipulation, analysis, and visualization."
  },
  {
    "objectID": "z_nuno.html#descriptive-statistics",
    "href": "z_nuno.html#descriptive-statistics",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "2.1 Descriptive Statistics",
    "text": "2.1 Descriptive Statistics\n[Summary statistics and key findings from descriptive analysis].\nSubset of COMTRADE Variables used in this study\n\n\n [1] \"RefYear\"      \"ReporterDesc\" \"PartnerCode\"  \"PartnerISO\"   \"PartnerDesc\" \n [6] \"Partner2Code\" \"Partner2ISO\"  \"Partner2Desc\" \"CustomsDesc\"  \"Fobvalue\"    \n[11] \"PrimaryValue\"\n\n\nPearson correlation coefficient (PrimaryValue vs Fobvalue)\n\n\n[1] 1\n\n\nSummary\n\n\n    RefYear      ReporterDesc  PartnerCode     PartnerISO       \n Min.   :2021   Min.   :620   Min.   :  0.0   Length:12144      \n 1st Qu.:2021   1st Qu.:620   1st Qu.:203.0   Class :character  \n Median :2022   Median :620   Median :372.0   Mode  :character  \n Mean   :2022   Mean   :620   Mean   :382.3                     \n 3rd Qu.:2022   3rd Qu.:620   3rd Qu.:616.0                     \n Max.   :2022   Max.   :620   Max.   :899.0                     \n PartnerDesc         Partner2Code   Partner2ISO        Partner2Desc      \n Length:12144       Min.   :  0.0   Length:12144       Length:12144      \n Class :character   1st Qu.:196.0   Class :character   Class :character  \n Mode  :character   Median :470.0   Mode  :character   Mode  :character  \n                    Mean   :453.4                                        \n                    3rd Qu.:724.0                                        \n                    Max.   :899.0                                        \n CustomsDesc           Fobvalue          PrimaryValue      \n Length:12144       Min.   :2.000e+00   Min.   :2.000e+00  \n Class :character   1st Qu.:8.056e+03   1st Qu.:8.056e+03  \n Mode  :character   Median :1.199e+05   Median :1.199e+05  \n                    Mean   :2.079e+08   Mean   :2.079e+08  \n                    3rd Qu.:2.391e+06   3rd Qu.:2.391e+06  \n                    Max.   :1.651e+11   Max.   :1.651e+11  \n\n\nAverage Foreign Market Value\n\n\n[1] 207908157"
  },
  {
    "objectID": "z_nuno.html#data-visualizations",
    "href": "z_nuno.html#data-visualizations",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "2.2 Data Visualizations",
    "text": "2.2 Data Visualizations\n[Visual representations of key trends, patterns, and relationships in the data].\nBarplot\n\n\n\n\n\nPie\n\n\n\n\n\nDotchart"
  },
  {
    "objectID": "z_nuno.html#analytical-results",
    "href": "z_nuno.html#analytical-results",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "2.3 Analytical Results",
    "text": "2.3 Analytical Results\n[Main findings and insights drawn from the analysis]."
  },
  {
    "objectID": "z_nuno.html#interpretation",
    "href": "z_nuno.html#interpretation",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "3.1 Interpretation",
    "text": "3.1 Interpretation\n[Interpretation of the results in relation to the research objectives and existing literature]."
  },
  {
    "objectID": "z_nuno.html#implications",
    "href": "z_nuno.html#implications",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "3.2 Implications",
    "text": "3.2 Implications\n[Discussion of the implications of the findings and their significance for the field]."
  },
  {
    "objectID": "z_nuno.html#limitations",
    "href": "z_nuno.html#limitations",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "3.3 Limitations",
    "text": "3.3 Limitations\n[Identification and discussion of limitations or constraints of the analysis]."
  },
  {
    "objectID": "z_nuno.html#future-directions",
    "href": "z_nuno.html#future-directions",
    "title": "Analysis of COMTRADE: A Comprehensive Overview",
    "section": "3.4 Future Directions",
    "text": "3.4 Future Directions\n[Suggestions for future research or improvements to the analysis]."
  },
  {
    "objectID": "j3.4_QUARTO_doc.html",
    "href": "j3.4_QUARTO_doc.html",
    "title": "Documento QUARTO",
    "section": "",
    "text": "Tudo aqui"
  },
  {
    "objectID": "j3.4_QUARTO_doc.html#footnotes",
    "href": "j3.4_QUARTO_doc.html#footnotes",
    "title": "Documento QUARTO",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nNota de rodapé 1 que aparecerá no pé da página↩︎\nNota de rodapé 2, também aparecerá no pé da página↩︎"
  },
  {
    "objectID": "j3.0.2_glossario.html",
    "href": "j3.0.2_glossario.html",
    "title": "Glossário",
    "section": "",
    "text": "Glossário\n\n\nObject: quase qualquer coisa pode ser um objeto R. Os mais comuns são: base de dados, variáveis, gráficos, resultados, modelos de regressão, etc.)\nDataframe: base de dados\nVector: variável. Tipos:\n\nNumeric: variáveis numéricas\nInteger : variáveis de números enteros\nCharacter : variáveis com texto\nFactor : variáveis categóricas\n\nlist: lista de objetos\nbasic package: pacotes internos do pacote R\nadd-on packages: pacotes externos do pacote R\nConsole: área do RStudio para executar comandos iterativamente (janela esquerda-inferior do RStudio)\nScript: documento para registar e executar comandos (janela esquerda-superior do RStudio)\nWorking Directory: Posição fisica no diretorio de pastas que utiliza como referencia cada sessão R\nWorkspace:o ambiente operacional de cada sessão R. Equiparável àa memória RAM enquanto R está ativo. Qualquer objeto que seja criado ou carregado durante a sessão será automaticamente armazenado lá.\nRproj: pasta organizadora de projetos, semplifica a gestão do working directory.\n\nTerminologia propria:\n\nBase original: Base de dados originais, geralmente importadas e que não deveriam ser modificadas.\nBase de uso: Base criada a partir da base original.\nScript_gd: script que utilizamos para a criação da ‘base de uso’.\nScript_analise: script que utilizamos para computar analise com a base de uso."
  },
  {
    "objectID": "j3.0.1_pacotes.html",
    "href": "j3.0.1_pacotes.html",
    "title": "Pacotes",
    "section": "",
    "text": "Aceder ao sítio cran.r-project.org\n\nClicar em\n\nDownload R for macOS or\n\nDescarregue a versão mais recente da GUI do R em (ficheiro .pkg) em “Latest release”. Pode descarregar versões muito mais antigas seguindo as ligações “old directory” ou “CRAN archive”.\nExecute o ficheiro .pkg e siga as instruções de instalação.\n\nDownload R for Windows\n\nClicar na ligação “install R for the first time” para transferir o ficheiro executável (.exe) do R.\nExecute o ficheiro executável do R para iniciar a instalação e permita que a aplicação faça alterações no seu dispositivo.\nSeleccione o idioma de instalação.\nSiga as instruções de instalação.\n\n\n\n\n\n\n\n\n\nAceder ao sitio do RStudio.\nClicar em “DOWNLOAD” no canto superior direito.\nClicar em “DOWNLOAD” sob a “RStudio Free Source License”.\nDescarregar o RStudio Desktop recomendado para o seu computador.\nExecute\n\no ficheiro RStudio Executable (.exe) para Windows ou\no ficheiro Apple Image Disk (.dmg) para macOS X."
  },
  {
    "objectID": "j3.0.1_pacotes.html#instalação-do-r",
    "href": "j3.0.1_pacotes.html#instalação-do-r",
    "title": "Pacotes",
    "section": "",
    "text": "Aceder ao sítio cran.r-project.org\n\nClicar em\n\nDownload R for macOS or\n\nDescarregue a versão mais recente da GUI do R em (ficheiro .pkg) em “Latest release”. Pode descarregar versões muito mais antigas seguindo as ligações “old directory” ou “CRAN archive”.\nExecute o ficheiro .pkg e siga as instruções de instalação.\n\nDownload R for Windows\n\nClicar na ligação “install R for the first time” para transferir o ficheiro executável (.exe) do R.\nExecute o ficheiro executável do R para iniciar a instalação e permita que a aplicação faça alterações no seu dispositivo.\nSeleccione o idioma de instalação.\nSiga as instruções de instalação."
  },
  {
    "objectID": "j3.0.1_pacotes.html#instalação-do-r.studio",
    "href": "j3.0.1_pacotes.html#instalação-do-r.studio",
    "title": "Pacotes",
    "section": "",
    "text": "Aceder ao sitio do RStudio.\nClicar em “DOWNLOAD” no canto superior direito.\nClicar em “DOWNLOAD” sob a “RStudio Free Source License”.\nDescarregar o RStudio Desktop recomendado para o seu computador.\nExecute\n\no ficheiro RStudio Executable (.exe) para Windows ou\no ficheiro Apple Image Disk (.dmg) para macOS X."
  },
  {
    "objectID": "z_Ana.html",
    "href": "z_Ana.html",
    "title": "Script para criar a base X em R",
    "section": "",
    "text": "carregar a BD nova\n\n load(\"~/Dropbox/_R-SCool/_RSCool.B_Website/RSCool_a_web_24/web_RSCool _Aveiro_1/z_Averiro_bases/Ana.Rdata\")\n\nB1 &lt;- business_empathy_small \n\n\n\ncalcular média por linha\n\nB1$meanT &lt;- ((B1$BE1 + B1$BE2 + B1$BE3 + B1$BE4 + B1$BE5 + B1$BE6 + B1$BE7 + B1$BE8)/8)\n\n\n\ncontrolo do calculo da média\n\nB1\n\n  BE1 BE2 BE3 BE4 BE5 BE6 BE7 BE8 meanT ID\n1   7   6   1   6   1   7   7   7 5.250  1\n2   6   6   1   6   4   7   6   5 5.125  2\n3   6   3   2   4   4   6   7   5 4.625  3\n4   4   4   4   4   4   4   4   4 4.000  4\n5   4   4   1   2   1   4   2   4 2.750  5\n\n\n\n\nfazer um gráfico de meanT\n\nplot(B1$meanT)\n\n\n\n\n\n\ncriar uma nova variável levelBE\n\nifelse(B1$meanT&gt;4,\"high\",\"low\")\n\n[1] \"high\" \"high\" \"high\" \"low\"  \"low\" \n\n\n\nB1$levelBE&lt;-ifelse(B1$meanT&gt;4,\"high\",\"low\")\n\n\n\ncontrolar criação de levelBE\n\nB1\n\n  BE1 BE2 BE3 BE4 BE5 BE6 BE7 BE8 meanT ID levelBE\n1   7   6   1   6   1   7   7   7 5.250  1    high\n2   6   6   1   6   4   7   6   5 5.125  2    high\n3   6   3   2   4   4   6   7   5 4.625  3    high\n4   4   4   4   4   4   4   4   4 4.000  4     low\n5   4   4   1   2   1   4   2   4 2.750  5     low\n\n\n\nsummary(B1)\n\n      BE1           BE2           BE3           BE4           BE5     \n Min.   :4.0   Min.   :3.0   Min.   :1.0   Min.   :2.0   Min.   :1.0  \n 1st Qu.:4.0   1st Qu.:4.0   1st Qu.:1.0   1st Qu.:4.0   1st Qu.:1.0  \n Median :6.0   Median :4.0   Median :1.0   Median :4.0   Median :4.0  \n Mean   :5.4   Mean   :4.6   Mean   :1.8   Mean   :4.4   Mean   :2.8  \n 3rd Qu.:6.0   3rd Qu.:6.0   3rd Qu.:2.0   3rd Qu.:6.0   3rd Qu.:4.0  \n Max.   :7.0   Max.   :6.0   Max.   :4.0   Max.   :6.0   Max.   :4.0  \n      BE6           BE7           BE8        meanT             ID   \n Min.   :4.0   Min.   :2.0   Min.   :4   Min.   :2.750   Min.   :1  \n 1st Qu.:4.0   1st Qu.:4.0   1st Qu.:4   1st Qu.:4.000   1st Qu.:2  \n Median :6.0   Median :6.0   Median :5   Median :4.625   Median :3  \n Mean   :5.6   Mean   :5.2   Mean   :5   Mean   :4.350   Mean   :3  \n 3rd Qu.:7.0   3rd Qu.:7.0   3rd Qu.:5   3rd Qu.:5.125   3rd Qu.:4  \n Max.   :7.0   Max.   :7.0   Max.   :7   Max.   :5.250   Max.   :5  \n   levelBE         \n Length:5          \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\n\nlibrary(Hmisc)\n\n\nAttaching package: 'Hmisc'\n\n\nThe following objects are masked from 'package:base':\n\n    format.pval, units\n\ndescribe(B1[,c(\"BE1\",\"BE2\",\"BE3\",\"BE4\",\"BE5\",\"BE6\",\"BE7\",\"BE8\")])\n\nB1[, c(\"BE1\", \"BE2\", \"BE3\", \"BE4\", \"BE5\", \"BE6\", \"BE7\", \"BE8\")] \n\n 8  Variables      5  Observations\n--------------------------------------------------------------------------------\nBE1 \n       n  missing distinct     Info     Mean      Gmd \n       5        0        3      0.9      5.4      1.6 \n                      \nValue        4   6   7\nFrequency    2   2   1\nProportion 0.4 0.4 0.2\n\nFor the frequency table, variable is rounded to the nearest 0\n--------------------------------------------------------------------------------\nBE2 \n       n  missing distinct     Info     Mean      Gmd \n       5        0        3      0.9      4.6      1.6 \n                      \nValue        3   4   6\nFrequency    1   2   2\nProportion 0.2 0.4 0.4\n\nFor the frequency table, variable is rounded to the nearest 0\n--------------------------------------------------------------------------------\nBE3 \n       n  missing distinct     Info     Mean      Gmd \n       5        0        3      0.8      1.8      1.4 \n                      \nValue        1   2   4\nFrequency    3   1   1\nProportion 0.6 0.2 0.2\n\nFor the frequency table, variable is rounded to the nearest 0\n--------------------------------------------------------------------------------\nBE4 \n       n  missing distinct     Info     Mean      Gmd \n       5        0        3      0.9      4.4        2 \n                      \nValue        2   4   6\nFrequency    1   2   2\nProportion 0.2 0.4 0.4\n\nFor the frequency table, variable is rounded to the nearest 0\n--------------------------------------------------------------------------------\nBE5 \n       n  missing distinct     Info     Mean      Gmd \n       5        0        2     0.75      2.8      1.8 \n                  \nValue        1   4\nFrequency    2   3\nProportion 0.4 0.6\n--------------------------------------------------------------------------------\nBE6 \n       n  missing distinct     Info     Mean      Gmd \n       5        0        3      0.9      5.6      1.8 \n                      \nValue        4   6   7\nFrequency    2   1   2\nProportion 0.4 0.2 0.4\n\nFor the frequency table, variable is rounded to the nearest 0\n--------------------------------------------------------------------------------\nBE7 \n       n  missing distinct     Info     Mean      Gmd \n       5        0        4     0.95      5.2      2.6 \n                          \nValue        2   4   6   7\nFrequency    1   1   1   2\nProportion 0.2 0.2 0.2 0.4\n\nFor the frequency table, variable is rounded to the nearest 0\n--------------------------------------------------------------------------------\nBE8 \n       n  missing distinct     Info     Mean      Gmd \n       5        0        3      0.9        5      1.4 \n                      \nValue        4   5   7\nFrequency    2   2   1\nProportion 0.4 0.4 0.2\n\nFor the frequency table, variable is rounded to the nearest 0\n--------------------------------------------------------------------------------"
  },
  {
    "objectID": "j3.6_testes_tool.html",
    "href": "j3.6_testes_tool.html",
    "title": "Testes",
    "section": "",
    "text": "Preform a t-test for difference between means.\nt.test(x, y)\nLinear model\nlm(x ~ y, data=df)\nGeneralised linear model.\nglm(x ~ y, data=df)"
  },
  {
    "objectID": "j3.6_testes_tool.html#testes-t",
    "href": "j3.6_testes_tool.html#testes-t",
    "title": "Testes",
    "section": "Testes-t",
    "text": "Testes-t\nSintaxe por defeto\n\nt.test(x, y = NULL,\n       alternative = c(\"two.sided\", \"less\", \"greater\"),\n       mu = 0, \n       paired = FALSE, \n       var.equal = FALSE,\n       conf.level = 0.95, ...)\n\n\n\nTeste-t para uma amosta\n\nt.test(T$Q, mu=10, alternative = \"two.sided\") \n# H0: mu=10     \n# HA: mu!=10\n\n\n\nt.test(T$Q, mu=10, alternative = \"less\") \n# H0: mu=10 \n# HA: mu&lt;10\n\n\n\n\nTeste-t para duas amostas emparelhadas\n\nt.test(T$Q,T$Q2,\n       paired=TRUE, \n       alternative = \"two.sided\") \n\n# H_0: mu1 -mu2 = 0      \n# H_A: mu1 -mu2 != 0 \n\n\\(H_0: mu1 -mu2 = 0\\)\n\\(H_A: \\mu1 -\\mu2 != 0\\)\n\nt.test(T$Q,T$Q2,  paired=TRUE,  alternative = \"less\") \n\n\\(H_A: \\mu1 -\\mu2 &gt; 0\\)\n\nt.test(T$Q,T$Q2,  paired=TRUE,  alternative = \"greater\") \n\n\n\n\nTeste-t para duas amostas independentes (a)\n\nt.test(T$Q,T$Q2,  alternative=\"less\")             # numérica numérica\n\n\n\nTeste t para duas amostas independentes (b)\n\nt.test(Q~C, alternative=\"less\"   , data = T) # numerica e categórica"
  },
  {
    "objectID": "j3.6_testes_tool.html#anova",
    "href": "j3.6_testes_tool.html#anova",
    "title": "Testes",
    "section": "ANOVA",
    "text": "ANOVA\n\naov(yQ ~ xC, data=T)\n\nsummary(aov(yQ ~ xC, T))"
  },
  {
    "objectID": "j3.6_testes_tool.html#chi-teste",
    "href": "j3.6_testes_tool.html#chi-teste",
    "title": "Testes",
    "section": "Chi Teste",
    "text": "Chi Teste\n\nchisq.test(cat_var, cat_var  )   \n\n\n\nCorrelação\n\ncor(y, x, use=\"na.or.complete\")\n\n# use=\"na.or.complete\"\n# use=\"complete.obs\"\n# use=\"all.obs\"\n# use=\"everything\"\n\n\n\n\nOrdinary Least Squares\n\nmodelo1  &lt;-lm( yQ ~ xQ ,data= T)\nsummary(modelo1)\n\nconfint(modelo1,level=0.90)  # to report confindent intervals (instead of t-ratios and p-values)\n\nattributes (modelo1)\n    modelo1$coefficients\n    coefficients (modelo1)\n\n\nplot (T$xQ  , T$yQ)\nabline (modelo1)\n\n\n\n\nDiagnosticos da regressão\n1.Functional Form\n\nplot(y=modelo1$residuals, x=modelo1$fitted.values,\n      xlab=\"Fitted Values”,ylab=“Residuals\")\n\n1.Heteroscedasticity\n\n# install.packages(\"lmtest\")\nlibrary(lmtest)\nbptest(modelo1, studentize=FALSE)\n\n\n\n\nBETA COEFFICIENTS\n[to extract the standardized coefficients from a fitted linear model] (https://stackoverflow.com/questions/24305271/extracting-standardized-coefficients-from-lm-in-r)\nA. The easiest way is to just standardize your variables. The coefficients will then automatically be the standardized “beta”-coefficients (i.e. coefficients in terms of standard deviations).\n\nmodelo1 &lt;- lm(scale(yQ) ~ scale(xQ), data=T)\n\nB. An alternative: use lm.beta function, from QuantPsyc package\n\nlibrary(\"QuantPsyc\")\n\nmodelo2 &lt;- lm( yQ  ~ xQ , data=T)\n\nlm.beta(modelo2)"
  },
  {
    "objectID": "j3.7_simulations.html",
    "href": "j3.7_simulations.html",
    "title": "Amostras Aleatórias e Distribuições de Probabilidade",
    "section": "",
    "text": "para gerar amostras aleatórias\n\n#|\nsample(x, size, replace = FALSE, prob = NULL)\n\n\nAmostra aleatória de 5 números de 1 a 10\n\nsample(1:10, 5, replace = TRUE)\n\n[1]  6  3  4  5 10\n\n\nDado\n\nsample(1:6,  4,       replace=TRUE)\n\n[1] 3 2 2 6\n\n\n\nmoeda, 100 lançadas (ver abaixo rbinom)\n\nsample(c(0,1), 100, replace=TRUE)\n\n  [1] 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 1 1 0 0\n [38] 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 0 0 1 1 1 1 0 0 0 1 0 0 0 1 1 0 1 1 1 0 0\n [75] 0 1 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1\n\n\n\nhist (sample (c(0,1), 100, replace=TRUE))\n\n\n\n\n\nmoeda ‘armadilha’\n\nsample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))\n\n  [1] 1 1 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 1 1 1 1 0 1 1\n [38] 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 1\n [75] 1 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1\n\n\n\nhist( sample (c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))) \nhist( sample (c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))) \nhist( sample (c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))) \nhist( sample (c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))) \n\n \n\n\n\ngera números aleatórios a partir de uma distribuição uniforme.\n\nGerar 10 números aleatórios a partir de uma distribuição uniforme [0, 1]:\n\n\nrunif(10)\n\n [1] 0.16040252 0.60434061 0.96759515 0.83583778 0.98673495 0.10118661\n [7] 0.16135262 0.07028367 0.39084781 0.32391030\n\n\n\n\n\n\ngera números aleatórios a partir de uma distribuição normal.\n\nGerar 100 números aleatórios de uma distribuição normal com média 0 e desvio padrão 1:\n\n\namostra_normal &lt;- rnorm(100, mean = 0, sd = 1)\nprint(amostra_normal)\n\n  [1]  1.82818751  0.14703076 -0.08044874  1.14379059 -0.48103387 -0.25110059\n  [7]  0.15744584  2.28328164 -2.39805327 -1.25129538 -2.31306916 -0.27842899\n [13]  1.34507033  2.51036725 -0.18543214  1.10915457  0.13169265  0.48111107\n [19] -0.86242595  1.16726139 -0.67043303 -0.52913410 -1.28627143 -3.10691293\n [25] -0.58486000 -1.85275864  0.88090412  0.26678411 -0.11938929  0.73715277\n [31]  0.62754722  0.04866947 -1.24475980  0.10863687 -0.33151119  1.31204682\n [37]  1.48569286  1.33683435 -0.33400712 -0.34227781 -1.19278787 -0.17571120\n [43] -0.21099612  0.36852884 -0.05263041 -1.71158506  0.19403113  1.30615342\n [49] -1.34241598 -1.33391710 -0.55662087 -1.29667132 -0.52777883 -0.29232542\n [55] -0.55833302  0.82303400 -1.38485244 -0.58409371 -0.20517195 -0.22038983\n [61] -1.14928473  1.05235601 -1.27023824  1.31584410  0.32214150  1.12480819\n [67]  0.64994822  0.59256416  1.60141897  0.96697581 -1.12024609  1.21659603\n [73]  0.36751053  0.88066717  2.48891746  1.23411747 -0.04736840 -0.86291061\n [79] -0.32621205  0.14780291  0.93268399 -0.84751900 -1.10202287 -0.22021459\n [85]  0.08285968 -0.37774397  1.05761079 -0.20428252 -3.02845302  0.13842236\n [91] -1.04910749  0.22861309  0.06138647 -0.25320114 -0.19741367 -0.34611273\n [97] -1.17287405 -0.90824041  1.43781047 -0.27642294\n\n\n\n\n\n\nsimula números aleatórios a partir de uma distribuição binomial.\n\nSimular 50 lançamentos de uma moeda com probabilidade de sucesso 0.5\n\n\nrbinom(50, size = 1, prob = 0.5)\n\n [1] 1 0 1 0 0 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 0\n[39] 0 0 1 0 0 0 0 0 0 0 1 1\n\n\n\n\n\n\nGera números aleatórios a partir de uma distribuição de Poisson.\n\nGerar 30 números aleatórios de uma distribuição de Poisson com média 3\n\n\nrpois(30, lambda = 3)\n\n [1] 1 2 2 3 4 3 3 1 3 5 1 3 2 6 1 2 2 1 3 3 1 2 2 1 2 2 4 4 0 7\n\n\n\nrpois(5, 10)    # 5 random values from a Poisson dist. with m.=10\n\n[1] 11 12 11 12  7\n\n\n\nreplicate (100, rpois(5,10))\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14]\n[1,]   12    7   14   14   10   11   12    7   14     8     9     9     6     8\n[2,]    7    5    9   14   11    8   12    5   11    15    10     6    17    10\n[3,]    7   10   14    9    8   10   12   11   13     7    17    14    11    16\n[4,]    7    5    9   11    7    5   10   14   14    13     8     9    11    15\n[5,]   12    8    9   16   11   12    6   15   10     9     9    10    10    12\n     [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26]\n[1,]    10     9     8    10    12    13    11    11     4    10     6    12\n[2,]    14     8     7    10    12    10    12     7     9     8    20     6\n[3,]     9     6     5    11     9    10     8    10     8    15    10    13\n[4,]    10    11     5     9     8    11     9     7    10     5    11     8\n[5,]    15    10     9     9     7    11     9     7    10     8     8    13\n     [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38]\n[1,]    11     6    12     8    15    16    14     8    12    12     9     8\n[2,]     4    11    12     9     8     7    12    13     8     7    10     7\n[3,]    10     9    13     9    13    15    20     4    12     9    16    11\n[4,]    11    11     9     7     9    11     8    11     6     8     7     7\n[5,]    15    12    10    15    13     9     7    10     9     7     8     7\n     [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50]\n[1,]    10    16     4     9     9     9    17    14     6    14    16     8\n[2,]    13     9     9    10     7    12    15    13    12     8     7     9\n[3,]    12     9    13    12     9    16     8    14    11     4     8    11\n[4,]    12    12    17    10     6     7     8     4     1    14     6    17\n[5,]    10    15     9     9    13     8     6    11    16     6    10    10\n     [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62]\n[1,]     5    15    18    12     9     7     7    10    10    10     8     8\n[2,]    11     9    10     8    12     6    13    11    13     7     8    13\n[3,]     8    11     8    10    10    11     3     8    11    10     6    11\n[4,]    12     3     6    13    11     7    17     9     7    10    13    13\n[5,]    12     6     3    11    11     9     8     7    17     9     6    11\n     [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74]\n[1,]     9     6    18     6     9     7     8     9     9     6     9    11\n[2,]    13     8     7    13    11     8    12     6    10     8     9     9\n[3,]    11     6     5    11    13    16    13     9    11     8     9     9\n[4,]    14    12     9    13    11    12     8    13     5    10    11     9\n[5,]    14     7    10     9    17    11     9    19    11    12    16     9\n     [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86]\n[1,]    13    14     9    10    13    13    12    10    12     3     7     9\n[2,]     7     8     7    10     9     9    12    10     9    11     4    15\n[3,]    12     9     7    10     9     8     9    11    11     3    10    12\n[4,]     8    11     9     7     6    10    14     8    14    10    11     8\n[5,]     8     8    11     6    12    10    10    10    12     8    10    10\n     [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98]\n[1,]     7     9    10    11    13     7    10     7    13    14     8    11\n[2,]    10    12     7     9    12    14    14     9    10     4    16    12\n[3,]     9    12    17    13     8     8     4     4    10     4    11    12\n[4,]    10    14     9    10     8     6     7    16    12    10    10    11\n[5,]    12     7    14     9    11     9     8    11     7     7    13     9\n     [,99] [,100]\n[1,]     8      6\n[2,]    13      9\n[3,]    10     12\n[4,]     7      6\n[5,]    14      9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRandom\nvariates\nDensity\nfunction\nCumulative\ndistribution\nQuantile\n\n\n\n\nNormal\nrnorm\ndnorm\npnorm\nqnorm\n\n\nPoisson\nrpois\ndpois\nppois\nqpois\n\n\nBinomial\nrbinom\ndbinom\npbinom\nqbinom\n\n\nUniform\nrunif\ndunif\npunif\nqunif\n\n\n\nTodas as distribuições de probabilidade padrão estão incorporadas no R, incluindo a exponencial (rexp()), qui-quadrado (rchisq()), gama (rgamma()), …"
  },
  {
    "objectID": "j3.7_simulations.html#geração-de-amostras-aleatórias",
    "href": "j3.7_simulations.html#geração-de-amostras-aleatórias",
    "title": "Amostras Aleatórias e Distribuições de Probabilidade",
    "section": "",
    "text": "para gerar amostras aleatórias\n\n#|\nsample(x, size, replace = FALSE, prob = NULL)\n\n\nAmostra aleatória de 5 números de 1 a 10\n\nsample(1:10, 5, replace = TRUE)\n\n[1]  6  3  4  5 10\n\n\nDado\n\nsample(1:6,  4,       replace=TRUE)\n\n[1] 3 2 2 6\n\n\n\nmoeda, 100 lançadas (ver abaixo rbinom)\n\nsample(c(0,1), 100, replace=TRUE)\n\n  [1] 0 0 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 1 1 0 0\n [38] 0 0 0 0 0 0 1 1 0 1 0 0 0 1 1 1 0 0 1 1 1 1 0 0 0 1 0 0 0 1 1 0 1 1 1 0 0\n [75] 0 1 0 1 0 1 1 1 0 1 0 0 0 0 0 0 1 0 0 1 0 0 0 1 0 1\n\n\n\nhist (sample (c(0,1), 100, replace=TRUE))\n\n\n\n\n\nmoeda ‘armadilha’\n\nsample(c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))\n\n  [1] 1 1 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 0 1 1 0 0 1 1 0 0 1 1 1 1 1 1 1 0 1 1\n [38] 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 0 1 1 1 0 1 1 0 1 1 0 1\n [75] 1 0 1 1 1 1 1 0 0 0 0 1 0 1 0 0 1 1 0 1 1 0 1 0 0 1\n\n\n\nhist( sample (c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))) \nhist( sample (c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))) \nhist( sample (c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))) \nhist( sample (c(0,1), 100, replace=TRUE, prob=c(0.3, 0.7))) \n\n \n\n\n\ngera números aleatórios a partir de uma distribuição uniforme.\n\nGerar 10 números aleatórios a partir de uma distribuição uniforme [0, 1]:\n\n\nrunif(10)\n\n [1] 0.16040252 0.60434061 0.96759515 0.83583778 0.98673495 0.10118661\n [7] 0.16135262 0.07028367 0.39084781 0.32391030\n\n\n\n\n\n\ngera números aleatórios a partir de uma distribuição normal.\n\nGerar 100 números aleatórios de uma distribuição normal com média 0 e desvio padrão 1:\n\n\namostra_normal &lt;- rnorm(100, mean = 0, sd = 1)\nprint(amostra_normal)\n\n  [1]  1.82818751  0.14703076 -0.08044874  1.14379059 -0.48103387 -0.25110059\n  [7]  0.15744584  2.28328164 -2.39805327 -1.25129538 -2.31306916 -0.27842899\n [13]  1.34507033  2.51036725 -0.18543214  1.10915457  0.13169265  0.48111107\n [19] -0.86242595  1.16726139 -0.67043303 -0.52913410 -1.28627143 -3.10691293\n [25] -0.58486000 -1.85275864  0.88090412  0.26678411 -0.11938929  0.73715277\n [31]  0.62754722  0.04866947 -1.24475980  0.10863687 -0.33151119  1.31204682\n [37]  1.48569286  1.33683435 -0.33400712 -0.34227781 -1.19278787 -0.17571120\n [43] -0.21099612  0.36852884 -0.05263041 -1.71158506  0.19403113  1.30615342\n [49] -1.34241598 -1.33391710 -0.55662087 -1.29667132 -0.52777883 -0.29232542\n [55] -0.55833302  0.82303400 -1.38485244 -0.58409371 -0.20517195 -0.22038983\n [61] -1.14928473  1.05235601 -1.27023824  1.31584410  0.32214150  1.12480819\n [67]  0.64994822  0.59256416  1.60141897  0.96697581 -1.12024609  1.21659603\n [73]  0.36751053  0.88066717  2.48891746  1.23411747 -0.04736840 -0.86291061\n [79] -0.32621205  0.14780291  0.93268399 -0.84751900 -1.10202287 -0.22021459\n [85]  0.08285968 -0.37774397  1.05761079 -0.20428252 -3.02845302  0.13842236\n [91] -1.04910749  0.22861309  0.06138647 -0.25320114 -0.19741367 -0.34611273\n [97] -1.17287405 -0.90824041  1.43781047 -0.27642294\n\n\n\n\n\n\nsimula números aleatórios a partir de uma distribuição binomial.\n\nSimular 50 lançamentos de uma moeda com probabilidade de sucesso 0.5\n\n\nrbinom(50, size = 1, prob = 0.5)\n\n [1] 1 0 1 0 0 0 1 1 0 1 0 0 1 0 1 0 0 1 1 1 1 0 0 1 0 1 0 0 1 0 0 0 0 0 1 0 0 0\n[39] 0 0 1 0 0 0 0 0 0 0 1 1\n\n\n\n\n\n\nGera números aleatórios a partir de uma distribuição de Poisson.\n\nGerar 30 números aleatórios de uma distribuição de Poisson com média 3\n\n\nrpois(30, lambda = 3)\n\n [1] 1 2 2 3 4 3 3 1 3 5 1 3 2 6 1 2 2 1 3 3 1 2 2 1 2 2 4 4 0 7\n\n\n\nrpois(5, 10)    # 5 random values from a Poisson dist. with m.=10\n\n[1] 11 12 11 12  7\n\n\n\nreplicate (100, rpois(5,10))\n\n     [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] [,11] [,12] [,13] [,14]\n[1,]   12    7   14   14   10   11   12    7   14     8     9     9     6     8\n[2,]    7    5    9   14   11    8   12    5   11    15    10     6    17    10\n[3,]    7   10   14    9    8   10   12   11   13     7    17    14    11    16\n[4,]    7    5    9   11    7    5   10   14   14    13     8     9    11    15\n[5,]   12    8    9   16   11   12    6   15   10     9     9    10    10    12\n     [,15] [,16] [,17] [,18] [,19] [,20] [,21] [,22] [,23] [,24] [,25] [,26]\n[1,]    10     9     8    10    12    13    11    11     4    10     6    12\n[2,]    14     8     7    10    12    10    12     7     9     8    20     6\n[3,]     9     6     5    11     9    10     8    10     8    15    10    13\n[4,]    10    11     5     9     8    11     9     7    10     5    11     8\n[5,]    15    10     9     9     7    11     9     7    10     8     8    13\n     [,27] [,28] [,29] [,30] [,31] [,32] [,33] [,34] [,35] [,36] [,37] [,38]\n[1,]    11     6    12     8    15    16    14     8    12    12     9     8\n[2,]     4    11    12     9     8     7    12    13     8     7    10     7\n[3,]    10     9    13     9    13    15    20     4    12     9    16    11\n[4,]    11    11     9     7     9    11     8    11     6     8     7     7\n[5,]    15    12    10    15    13     9     7    10     9     7     8     7\n     [,39] [,40] [,41] [,42] [,43] [,44] [,45] [,46] [,47] [,48] [,49] [,50]\n[1,]    10    16     4     9     9     9    17    14     6    14    16     8\n[2,]    13     9     9    10     7    12    15    13    12     8     7     9\n[3,]    12     9    13    12     9    16     8    14    11     4     8    11\n[4,]    12    12    17    10     6     7     8     4     1    14     6    17\n[5,]    10    15     9     9    13     8     6    11    16     6    10    10\n     [,51] [,52] [,53] [,54] [,55] [,56] [,57] [,58] [,59] [,60] [,61] [,62]\n[1,]     5    15    18    12     9     7     7    10    10    10     8     8\n[2,]    11     9    10     8    12     6    13    11    13     7     8    13\n[3,]     8    11     8    10    10    11     3     8    11    10     6    11\n[4,]    12     3     6    13    11     7    17     9     7    10    13    13\n[5,]    12     6     3    11    11     9     8     7    17     9     6    11\n     [,63] [,64] [,65] [,66] [,67] [,68] [,69] [,70] [,71] [,72] [,73] [,74]\n[1,]     9     6    18     6     9     7     8     9     9     6     9    11\n[2,]    13     8     7    13    11     8    12     6    10     8     9     9\n[3,]    11     6     5    11    13    16    13     9    11     8     9     9\n[4,]    14    12     9    13    11    12     8    13     5    10    11     9\n[5,]    14     7    10     9    17    11     9    19    11    12    16     9\n     [,75] [,76] [,77] [,78] [,79] [,80] [,81] [,82] [,83] [,84] [,85] [,86]\n[1,]    13    14     9    10    13    13    12    10    12     3     7     9\n[2,]     7     8     7    10     9     9    12    10     9    11     4    15\n[3,]    12     9     7    10     9     8     9    11    11     3    10    12\n[4,]     8    11     9     7     6    10    14     8    14    10    11     8\n[5,]     8     8    11     6    12    10    10    10    12     8    10    10\n     [,87] [,88] [,89] [,90] [,91] [,92] [,93] [,94] [,95] [,96] [,97] [,98]\n[1,]     7     9    10    11    13     7    10     7    13    14     8    11\n[2,]    10    12     7     9    12    14    14     9    10     4    16    12\n[3,]     9    12    17    13     8     8     4     4    10     4    11    12\n[4,]    10    14     9    10     8     6     7    16    12    10    10    11\n[5,]    12     7    14     9    11     9     8    11     7     7    13     9\n     [,99] [,100]\n[1,]     8      6\n[2,]    13      9\n[3,]    10     12\n[4,]     7      6\n[5,]    14      9"
  },
  {
    "objectID": "j3.7_simulations.html#distribuições-de-probabilidades",
    "href": "j3.7_simulations.html#distribuições-de-probabilidades",
    "title": "Amostras Aleatórias e Distribuições de Probabilidade",
    "section": "",
    "text": "Random\nvariates\nDensity\nfunction\nCumulative\ndistribution\nQuantile\n\n\n\n\nNormal\nrnorm\ndnorm\npnorm\nqnorm\n\n\nPoisson\nrpois\ndpois\nppois\nqpois\n\n\nBinomial\nrbinom\ndbinom\npbinom\nqbinom\n\n\nUniform\nrunif\ndunif\npunif\nqunif\n\n\n\nTodas as distribuições de probabilidade padrão estão incorporadas no R, incluindo a exponencial (rexp()), qui-quadrado (rchisq()), gama (rgamma()), …"
  },
  {
    "objectID": "z_AnaCatarina.html",
    "href": "z_AnaCatarina.html",
    "title": "Análise das despesas durante a viagem de seniores",
    "section": "",
    "text": "Carregar a base\n\nload(\"~/Dropbox/_R-SCool/_RSCool.B_Website/RSCool_a_web_24/web_RSCool _Aveiro_1/z_Averiro_bases/AnaCatarina.Rdata\")\n# Criar novo objeto \"S\" para trabalhar a base (cópia da BD original)\nS = senior2024glglglgg\n\n\n\nSaber quais as variáveis na base\n\nnames(S)\n\n  [1] \"ID\"          \"ENT\"         \"Q01\"         \"Q011\"        \"Q021\"       \n  [6] \"Q022\"        \"Q023\"        \"Q024\"        \"Q025\"        \"Q03\"        \n [11] \"Q04\"         \"Q041\"        \"Q042\"        \"Q043\"        \"Q044\"       \n [16] \"Q045\"        \"Q046\"        \"Q047\"        \"Q048\"        \"Q049\"       \n [21] \"Q049D\"       \"Q051\"        \"Q052\"        \"Q053\"        \"Q054\"       \n [26] \"Q055\"        \"Q056\"        \"Q057\"        \"Q058\"        \"Q059\"       \n [31] \"Q0510\"       \"Q0511\"       \"Q0512\"       \"Q0513\"       \"Q0514\"      \n [36] \"Q0514D\"      \"Q061\"        \"Q062\"        \"Q063\"        \"Q064\"       \n [41] \"Q065\"        \"Q066\"        \"Q067\"        \"Q068\"        \"Q069\"       \n [46] \"Q0610\"       \"Q0611\"       \"Q0612\"       \"Q0613\"       \"Q0614\"      \n [51] \"Q0615\"       \"Q0616\"       \"Q0617\"       \"Q0618\"       \"Q0619\"      \n [56] \"Q0620\"       \"Q0621\"       \"Q0622\"       \"Q0623\"       \"Q0624\"      \n [61] \"Q0625\"       \"Q0626\"       \"Q0627\"       \"Q0627D\"      \"Q071\"       \n [66] \"Q072\"        \"Q073\"        \"Q074\"        \"Q075\"        \"Q076\"       \n [71] \"Q077\"        \"Q078\"        \"Q079\"        \"Q0710\"       \"Q0711\"      \n [76] \"Q0712\"       \"Q0713\"       \"Q0714\"       \"Q0715\"       \"Q0716\"      \n [81] \"Q0717\"       \"Q0718\"       \"Q0719\"       \"Q0720\"       \"Q0721\"      \n [86] \"Q0722\"       \"Q0723\"       \"Q08\"         \"Q08D\"        \"Q091\"       \n [91] \"Q092\"        \"Q093\"        \"Q094\"        \"Q095\"        \"Q096\"       \n [96] \"Q096D\"       \"Q101\"        \"Q102\"        \"Q103\"        \"Des_Tota\"   \n[101] \"Q1021\"       \"Q1022\"       \"Q1023\"       \"Q111\"        \"Q112\"       \n[106] \"Q113\"        \"Q114\"        \"Q115\"        \"Q116\"        \"Q117\"       \n[111] \"Q118\"        \"Q119\"        \"Q1110\"       \"Q1111\"       \"Q121\"       \n[116] \"Q122\"        \"Q123\"        \"Q124\"        \"Q131\"        \"Q132\"       \n[121] \"Q14\"         \"Q15\"         \"Q16\"         \"Q161\"        \"Q17\"        \n[126] \"Q171\"        \"Q18\"         \"Q18D\"        \"Q191\"        \"Q192\"       \n[131] \"Q193\"        \"Q194\"        \"Q195\"        \"Q196\"        \"Q196D\"      \n[136] \"Q20\"         \"Q21\"         \"Q215D\"       \"Q22\"         \"Idade_Categ\"\n\n\n\n\nFazer uma análise (histograma, mínimo, máximo, média) da variável Des_Tota, a amarelo, com título personalizado\n\nmin(S$Des_Tota,na.rm=TRUE)\n\n[1] 0\n\nmax(S$Des_Tota,na.rm=TRUE)\n\n[1] 520\n\nmean(S$Des_Tota,na.rm=TRUE)\n\n[1] 56.22509\n\nhist(S$Des_Tota,col = \"yellow\", main = \"Despesas totais durante a viagem\", xlab = \"Despesas totais (€)\" )\n\n\n\n\n\n\nTabela frequências percentuais NUTS II\n\nt1 =table (S$Q161)\n\nt2per &lt;- cbind(Freq=t1, \n               Cumul=cumsum(t1), \n               Relative=prop.table(t1)*100, \n               Cum.Rel.=cumsum(prop.table(t1)\n               *100))  ; \nt2per\n\n         Freq Cumul  Relative  Cum.Rel.\n           68    68 12.341198  12.34120\nAlentejo   46   114  8.348457  20.68966\nAlgarve    19   133  3.448276  24.13793\nCentro    192   325 34.845735  58.98367\nLisboa     52   377  9.437387  68.42105\nNorte     174   551 31.578947 100.00000\n\n\n\n\nTeste de T entre Despesas antes e durante a viagem\n\nt.test(S$Q101,S$Q102)\n\n\n    Welch Two Sample t-test\n\ndata:  S$Q101 and S$Q102\nt = -7.9545, df = 983.57, p-value = 4.921e-15\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -31.67097 -19.13675\nsample estimates:\nmean of x mean of y \n 31.40596  56.80982"
  }
]